{"id": "ont_6_computer_test_1", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: HDOS is an early microcomputer operating system, originally written for the Heathkit H8 computer system and later also available for the Heathkit H89 and Zenith Z-89 computers.\n\n### Example Output: platform(HDOS,Heathkit H8)\n\n### Test Sentence: High Performance File System was written by Gordon Letwin and others at Microsoft and added to OS/2 version 1.2, at that time still a joint undertaking of Microsoft and IBM, and released in 1988.\n\n### Test Output:"}
{"id": "ont_6_computer_test_2", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Machine Operating System (MOS) or OS is a discontinued computer operating system (OS) used in Acorn Computers BBC computer range.\n\n### Example Output: developer(Acorn MOS,Acorn Computers)\n\n### Test Sentence: The name is a contraction of Amstrad Disk Operating System.\n\n### Test Output:"}
{"id": "ont_6_computer_test_3", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Adobe Persuasion (formerly Aldus Persuasion) is a discontinued presentation program developed for the Macintosh platform by Aldus Corporation.\n\n### Example Output: developer(Adobe Persuasion,Aldus)\n\n### Test Sentence: Windows Movie Maker (known as Windows Live Movie Maker for the 2009 and 2011 releases)  is a discontinued video editing software program by Microsoft.\n\n### Test Output:"}
{"id": "ont_6_computer_test_4", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Contract J.A.C.K. was developed by Monolith Productions and published by Sierra Entertainment, a subsidiary of Vivendi Universal Games.\n\n### Example Output: developer(Contract J.A.C.K.,Monolith Productions)\n\n### Test Sentence: Developed by Massive Entertainment and High Voltage Software, Ground Control : Dark Conspiracy was first announced in August 2000 by Sierra Studios.\n\n### Test Output:"}
{"id": "ont_6_computer_test_5", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Neverwinter Nights 2: Storm of Zehir is an expansion pack for the role-playing video game Neverwinter Nights 2, developed by Obsidian Entertainment and published by Atari.\n\n### Example Output: developer(Neverwinter Nights 2: Storm of Zehir,Obsidian Entertainment)\n\n### Test Sentence: Neverwinter Nights 2: Mask of the Betrayer is a role-playing video game developed by Obsidian Entertainment and published by Atari.\n\n### Test Output:"}
{"id": "ont_6_computer_test_6", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Neverwinter Nights: Hordes of the Underdark is an expansion pack for the role-playing video game Neverwinter Nights produced by BioWare and published by Atari, Inc.\n\n### Example Output: developer(Neverwinter Nights: Hordes of the Underdark,BioWare)\n\n### Test Sentence: Battle Realms: Winter of the Wolf is the expansion pack of the real-time strategy video game Battle Realms, developed by Liquid Entertainment and Crave Entertainment and published by Ubisoft.\n\n### Test Output:"}
{"id": "ont_6_computer_test_7", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Ulead MediaStudio Pro (MSP) is real-time, timeline based prosumer level video editing software by Ulead Systems.\n\n### Example Output: developer(Ulead MediaStudio Pro,Ulead Systems)\n\n### Test Sentence: Final Cut Pro is a series of non-linear video editing software programs first developed by Macromedia Inc. and later Apple Inc.\n\n### Test Output:"}
{"id": "ont_6_computer_test_8", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Opposing Fronts was developed by Canadian-based RTS developer Relic Entertainment, and published by THQ.\n\n### Example Output: developer(Company of Heroes: Opposing Fronts,Relic Entertainment)\n\n### Test Sentence: World in Conflict: Soviet Assault is a 2009 expansion pack developed by Massive Entertainment and Swordfish Studios for the 2007 real-time tactics video game World in Conflict.\n\n### Test Output:"}
{"id": "ont_6_computer_test_9", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: NOS / VE is a virtual memory operating system, employing the 64-bit virtual mode of the CDC Cyber 180 series computers.\n\n### Example Output: platform(NOS/VE,CDC Cyber)\n\n### Test Sentence: VME (Virtual Machine Environment) is a mainframe operating system developed by the UK company International Computers Limited (ICL, now part of the Fujitsu group).\n\n### Test Output:"}
{"id": "ont_6_computer_test_10", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Guild Wars 2: Path of Fire is the second expansion pack for Guild Wars 2, a massively multiplayer online role-playing game developed and published by ArenaNet.\n\n### Example Output: developer(Guild Wars 2: Path of Fire,ArenaNet)\n\n### Test Sentence: Guild Wars 2: Heart of Thorns is the first expansion pack for Guild Wars 2, a massively multiplayer online role-playing game developed by ArenaNet and published by NCSOFT.\n\n### Test Output:"}
{"id": "ont_6_computer_test_11", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: In 2015 OS / 2 was announced that a new OEM distribution of OS/2 would be released that was to be called ArcaOS.\n\n### Example Output: derivative_work(OS/2,ArcaOS)\n\n### Test Sentence: On December 29, 2015, the AmigaOS 3.1 source code leaked to the web; this was confirmed by the rights holder, Hyperion Entertainment.\n\n### Test Output:"}
{"id": "ont_6_computer_test_12", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Opera GX is a gaming counterpart of Opera web browser for Microsoft Windows and macOS, developed by Opera Software AS.\n\n### Example Output: developer(Opera GX,Opera Software)\n\n### Test Sentence: Opera Software also implemented the Nintendo DS Browser for Nintendo's handheld system.\n\n### Test Output:"}
{"id": "ont_6_computer_test_13", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: CP/M, originally standing for Control Program/Monitor and later Control Program for Microcomputers, is a mass-market operating system created in 1974 for Intel 8080/85-based microcomputers by Gary Kildall of Digital Research, Inc.\n\n### Example Output: creator(CP/M,Gary Kildall)\n\n### Test Sentence: PC-MOS/386 is a multi-user, multitasking computer operating system produced by The Software Link (TSL), announced at COMDEX in November 1986 for February 1987 release.\n\n### Test Output:"}
{"id": "ont_6_computer_test_14", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Kiwix is a free and open-source offline web browser created by Emmanuel Engelhart and Renaud Gaudin in 2007.\n\n### Example Output: creator(Kiwix,Renaud Gaudin)\n\n### Test Sentence: AOL allows downloading of archived versions of the Netscape Navigator web browser family.\n\n### Test Output:"}
{"id": "ont_6_computer_test_15", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Stronghold: Crusader is the successor to Firefly Studios's 2001 real-time strategy video game Stronghold.\n\n### Example Output: developer(Stronghold: Crusader,Firefly Studios)\n\n### Test Sentence: The Conquerors is the fourth installment in the Age of Empires series by Microsoft Game Studios and Ensemble Studios.\n\n### Test Output:"}
{"id": "ont_6_computer_test_16", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Ultrix (officially all-caps ULTRIX) is the brand name of Digital Equipment Corporation's (DEC) discontinued native Unix operating systems for the PDP-11, VAX, MicroVAX and DECstations.\n\n### Example Output: developer(Ultrix,Digital Equipment Corporation)\n\n### Test Sentence: DNIX (original spelling: D-Nix) was a Unix-like real-time operating system from the Swedish company Dataindustrier AB (DIAB).\n\n### Test Output:"}
{"id": "ont_6_computer_test_17", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Ultrix (officially all-caps ULTRIX) is the brand name of Digital Equipment Corporation's (DEC) discontinued native Unix operating systems for the PDP-11, VAX, MicroVAX and DECstations.\n\n### Example Output: developer(Ultrix,Digital Equipment Corporation)\n\n### Test Sentence: RSX-11 is a discontinued family of multi-user real-time operating systems for PDP-11 computers created by Digital Equipment Corporation.\n\n### Test Output:"}
{"id": "ont_6_computer_test_18", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: WAITS was a heavily modified variant of Digital Equipment Corporation's Monitor operating system (later renamed to, and better known as, \"TOPS-10\") for the PDP-6 and PDP-10 mainframe computers, used at the Stanford Artificial Intelligence Laboratory (SAIL) from the mid-1960s up until 1991; the mainframe computer it ran on also went by the name of \"SAIL\".\n\n### Example Output: platform(WAITS,PDP-6)\n\n### Test Sentence: AdvFS, also known as Tru64 UNIX Advanced File System, is a file system developed in the late 1980s to mid-1990s by Digital Equipment Corporation for their  OSF/1 version of the Unix operating system (later Digital UNIX/Tru64 UNIX).\n\n### Test Output:"}
{"id": "ont_6_computer_test_19", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Guild Wars 2: Path of Fire is the second expansion pack for Guild Wars 2, a massively multiplayer online role-playing game developed and published by ArenaNet.\n\n### Example Output: developer(Guild Wars 2: Path of Fire,ArenaNet)\n\n### Test Sentence: Guild Wars: Eye of the North is an expansion pack to the Action role-playing game Guild Wars by ArenaNet, a subsidiary of NCSOFT.\n\n### Test Output:"}
{"id": "ont_6_computer_test_20", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Transaction Management eXecutive or TMX was NCR Corporation's proprietary transaction processing system running on NCR Tower 5000-series systems which were based on Motorola 680xx CPUs.\n\n### Example Output: developer(Transaction Management eXecutive,NCR Corporation)\n\n### Test Sentence: VRX is an acronym for Virtual Resource eXecutive, a proprietary operating system on the NCR Criterion series, and later the V-8000 series of mainframe computers manufactured by NCR Corporation during the 1970s and 1980s.\n\n### Test Output:"}
{"id": "ont_6_computer_test_21", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Windows XP is an operating system produced by Microsoft as part of the Windows NT family of operating systems.\n\n### Example Output: developer(Windows XP,Microsoft)\n\n### Test Sentence: NTFS (NT File System) is a proprietary journaling file system developed by Microsoft.\n\n### Test Output:"}
{"id": "ont_6_computer_test_22", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: MUSIC/SP (Multi-User System for Interactive Computing/System Product; originally \"McGill University System for Interactive Computing\") was developed at McGill University in the 1970s from an early IBM time-sharing system called RAX (Remote Access Computing System).\n\n### Example Output: developer(MUSIC/SP,McGill University)\n\n### Test Sentence: Z / VM is directly based on technology and concepts dating back to the 1960s, with IBM's CP/CMS on the IBM System/360-67 (see article History of CP/CMS for historical details).\n\n### Test Output:"}
{"id": "ont_6_computer_test_23", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Faery Tale Adventure is a 1987 action role-playing video game designed by David Joiner and published by MicroIllusions for the Amiga, and later ported to the Commodore 64, MS-DOS, and Sega Genesis.\n\n### Example Output: platform(The Faery Tale Adventure,Commodore 64)\n\n### Test Sentence: The Book of Unwritten Tales: The Critter Chronicles is a point-and-click adventure video game created by German developer King Art Games.\n\n### Test Output:"}
{"id": "ont_6_computer_test_24", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Age of Conan : Rise of the Godslayer was announced on August 18, 2009 on by Funcom.\n\n### Example Output: developer(Age of Conan: Rise of the Godslayer,Funcom)\n\n### Test Sentence: On August 12, 2009, the official release date of September 8, 2009 was announced by Electronic Arts.\n\n### Test Output:"}
{"id": "ont_6_computer_test_25", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: TOPS-10 System (Timesharing / Total Operating System-10) is a discontinued operating system from Digital Equipment Corporation (DEC) for the PDP-10 (or DECsystem-10) mainframe computer family.\n\n### Example Output: developer(TOPS-10,Digital Equipment Corporation)\n\n### Test Sentence: The TOPS-20 operating system by Digital Equipment Corporation (DEC) was a proprietary OS used on some of DEC's 36-bit mainframe computers.\n\n### Test Output:"}
{"id": "ont_6_computer_test_26", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: HDOS is an early microcomputer operating system, originally written for the Heathkit H8 computer system and later also available for the Heathkit H89 and Zenith Z-89 computers.\n\n### Example Output: platform(HDOS,Heathkit H8)\n\n### Test Sentence: OS/8 was the primary operating system used on the Digital Equipment Corporation's PDP-8 minicomputer.\n\n### Test Output:"}
{"id": "ont_6_computer_test_27", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Delta Force: Task Force Dagger is a first-person shooter video game developed by Zombie Studios and published by NovaLogic.\n\n### Example Output: developer(Delta Force: Task Force Dagger,Zombie Studios)\n\n### Test Sentence: Halo 3: ODST is a 2009 first-person shooter game developed by Bungie and published by Microsoft Game Studios.\n\n### Test Output:"}
{"id": "ont_6_computer_test_28", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Free Studio is a freeware set of multimedia programs developed by DVDVideoSoft.\n\n### Example Output: developer(Free Studio,DVDVideoSoft)\n\n### Test Sentence: LEGO Digital Designer (LDD) is a freeware computer program produced by the Lego Group as a part of LEGO Design byME.\n\n### Test Output:"}
{"id": "ont_6_computer_test_29", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Reiser4 is a computer file system, successor to the ReiserFS file system, developed from scratch by Namesys and sponsored by DARPA as well as Linspire.\n\n### Example Output: developer(Reiser4,Namesys)\n\n### Test Sentence: The file system is developed by Nokia engineers with help of the University of Szeged, Hungary.\n\n### Test Output:"}
{"id": "ont_6_computer_test_30", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Unlike SGI Visual Workstation's other product lines, which used the 64-bit MIPS RISC architecture, the line used Intel Pentium II and III processors and shipped with Windows NT 4.0 or Windows 2000 as its operating system in lieu of IRIX.\n\n### Example Output: operating_system(SGI Visual Workstation,Windows NT 4.0)\n\n### Test Sentence: The original NetWare product in 1983 supported clients running both CP/M and MS-DOS, ran over a proprietary star network topology and was based on a Novell-built file server using the Motorola 68000 processor, but the company soon moved away from building its own hardware, and NetWare became hardware-independent, running on any suitable Intel-based IBM PC compatible system, and a wide range of network cards.\n\n### Test Output:"}
{"id": "ont_6_computer_test_31", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Columbus UNIX, or CB UNIX, is a discontinued variant of the UNIX operating system used internally at Bell Labs for administrative databases and transaction processing.\n\n### Example Output: developer(CB UNIX,Bell Labs)\n\n### Test Sentence: The Cobalt Qube was a computer server appliance product line developed by Cobalt Networks, Inc. (later purchased by Sun Microsystems) from 1998 to 2002 featuring a modified Red Hat Linux operating system and a proprietary GUI for server management.\n\n### Test Output:"}
{"id": "ont_6_computer_test_32", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Neverwinter Nights: Hordes of the Underdark is an expansion pack for the role-playing video game Neverwinter Nights produced by BioWare and published by Atari, Inc.\n\n### Example Output: developer(Neverwinter Nights: Hordes of the Underdark,BioWare)\n\n### Test Sentence: Warcraft III: The Frozen Throne is the expansion pack for Warcraft III: Reign of Chaos, a real-time strategy video game by Blizzard Entertainment.\n\n### Test Output:"}
{"id": "ont_6_computer_test_33", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Delta Force: Task Force Dagger is a first-person shooter video game developed by Zombie Studios and published by NovaLogic.\n\n### Example Output: developer(Delta Force: Task Force Dagger,Zombie Studios)\n\n### Test Sentence: Tom Clancy's Ghost Recon: Desert Siege is an expansion of Tom Clancy's Ghost Recon developed by Red Storm Entertainment and published by Ubi Soft for Microsoft Windows.\n\n### Test Output:"}
{"id": "ont_6_computer_test_34", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Neverwinter Nights: Hordes of the Underdark is an expansion pack for the role-playing video game Neverwinter Nights produced by BioWare and published by Atari, Inc.\n\n### Example Output: developer(Neverwinter Nights: Hordes of the Underdark,BioWare)\n\n### Test Sentence: Icewind Dale: Heart of Winter is an expansion pack to the role-playing video game Icewind Dale developed by Black Isle Studios.\n\n### Test Output:"}
{"id": "ont_6_computer_test_35", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Neverwinter Nights: Hordes of the Underdark is an expansion pack for the role-playing video game Neverwinter Nights produced by BioWare and published by Atari, Inc.\n\n### Example Output: developer(Neverwinter Nights: Hordes of the Underdark,BioWare)\n\n### Test Sentence: Developed by BioWare and published by Interplay, Baldur 's Gate : Tales of the Sword Coast adds 20 to 30 extra hours of gameplay to the original game, including the addition of four new areas and minor tweaks to some of the mechanics.\n\n### Test Output:"}
{"id": "ont_6_computer_test_36", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Mass Effect 2: Lair of the Shadow Broker is a downloadable content pack developed by BioWare and published by Electronic Arts for the 2010 action role-playing video game Mass Effect 2.\n\n### Example Output: developer(Mass Effect 2: Lair of the Shadow Broker,BioWare)\n\n### Test Sentence: Mass Effect 2: Overlord is a downloadable content pack developed by BioWare and published by Electronic Arts for the 2010 action role-playing video game Mass Effect 2.\n\n### Test Output:"}
{"id": "ont_6_computer_test_37", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: SUPER-UX is a version of the Unix operating system from NEC that is used on its SX series of supercomputers.\n\n### Example Output: developer(SUPER-UX,NEC)\n\n### Test Sentence: The CXFS file system (Clustered XFS) is a proprietary shared disk file system designed by Silicon Graphics (SGI) specifically to be used in a storage area network (SAN) environment.\n\n### Test Output:"}
{"id": "ont_6_computer_test_38", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: To achieve a wide variety of tasks in proteomics, OpenMS provides The OpenMS Proteomics Pipeline (TOPP) which is a set of computational tools that can be chained together to tailor problem-specific analysis pipelines for HPLC-MS data.\n\n### Example Output: uses(OpenMS,The OpenMS Proteomics Pipeline)\n\n### Test Sentence: CANape is a software tool from Vector Informatik.\n\n### Test Output:"}
{"id": "ont_6_computer_test_39", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Machine Operating System (MOS) or OS is a discontinued computer operating system (OS) used in Acorn Computers BBC computer range.\n\n### Example Output: developer(Acorn MOS,Acorn Computers)\n\n### Test Sentence: Microsoft ended extended support for Windows 95 on December 31, 2001.\n\n### Test Output:"}
{"id": "ont_6_computer_test_40", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: SUPER-UX is a version of the Unix operating system from NEC that is used on its SX series of supercomputers.\n\n### Example Output: developer(SUPER-UX,NEC)\n\n### Test Sentence: The first two models in NEC's SX series of supercomputers, the SX-1 and the SX-2 (released in 1985), ran an operating system derived from ACOS-4, which was variously called either SX-OS or SXCP (SX System Control Program).\n\n### Test Output:"}
{"id": "ont_6_computer_test_41", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Zork III was released for the Amstrad CPC, Apple II, Atari 8-bit family, Commodore 64, CP/M, IBM PC (as a self-booting disk), MSX, TRS-80, then later for Macintosh, Atari ST, and Amiga.\n\n### Example Output: platform(Zork III,Atari ST)\n\n### Test Sentence: ActivePerl is a distribution of Perl from ActiveState (formerly part of Sophos) for Windows, macOS, Linux, Solaris, AIX and HP-UX.\n\n### Test Output:"}
{"id": "ont_6_computer_test_42", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Last of Us: Left Behind is an action-adventure game developed by Naughty Dog and published by Sony Computer Entertainment.\n\n### Example Output: developer(The Last of Us: Left Behind,Naughty Dog)\n\n### Test Sentence: The game was developed by Techland, published by Warner Bros. Interactive Entertainment, and released for Microsoft Windows, Linux, PlayStation 4, and Xbox One on February 9, 2016.\n\n### Test Output:"}
{"id": "ont_6_computer_test_43", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Domain/OS is the discontinued operating system used by the Apollo/Domain line of workstations manufactured by Apollo Computer Inc. during the late 1980s, as the successor to the one previously used, AEGIS.\n\n### Example Output: developer(Domain/OS,Apollo Computer)\n\n### Test Sentence: 86-DOS is a discontinued operating system developed and marketed by Seattle Computer Products (SCP) for its Intel 8086-based computer kit.\n\n### Test Output:"}
{"id": "ont_6_computer_test_44", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Sims 2: University is the first expansion pack for the strategic life simulation computer game The Sims 2 developed at the Redwood Shores studio of Maxis and published by Electronic Arts.\n\n### Example Output: developer(The Sims 2: University,Maxis)\n\n### Test Sentence: The Sims 2 : Seasons was developed at the Redwood Shores studio of Maxis and was released on March 1, 2007 in North America, and was followed by the European release on March 2, 2007.\n\n### Test Output:"}
{"id": "ont_6_computer_test_45", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Pinnacle Studio is a video editing program originally developed by Pinnacle Systems as a consumer level software.\n\n### Example Output: developer(Pinnacle Studio,Pinnacle Systems)\n\n### Test Sentence: Vegas Pro (also stylized as VEGAS Pro) is a video editing software package for non-linear editing (NLE) originally published by Sonic Foundry, then by Sony Creative Software, and now by Magix.\n\n### Test Output:"}
{"id": "ont_6_computer_test_46", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The expansion was developed by TimeGate Studios, the same development team behind the first expansion, F.E.A.R.\n\n### Example Output: developer(F.E.A.R. Perseus Mandate,TimeGate Studios)\n\n### Test Sentence: Extraction Point is an expansion pack for the psychological survival horror first-person shooter video game F.E.A.R., published by Vivendi Games and Warner Bros. Interactive Entertainment and developed by TimeGate Studios (rather than Monolith Productions, the developers of F.E.A.R.).\n\n### Test Output:"}
{"id": "ont_6_computer_test_47", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: A generalization of Bell Labs' time-sharing operating system Unix, MERT featured a redesigned, modular kernel that was able to run Unix programs and privileged real-time computing processes.\n\n### Example Output: developer(Multi-Environment Real-Time,Bell Labs)\n\n### Test Sentence: MONECS (Monash University Educational Computing System) was a computer operating system with BASIC, COBOL, FORTRAN, Pascal interpreters, plus machine language facility.\n\n### Test Output:"}
{"id": "ont_6_computer_test_48", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Unlike the original Diablo's expansion pack, Diablo: Hellfire, Diablo II : Lord of Destruction is a first-party expansion developed by Blizzard North.\n\n### Example Output: developer(Diablo II: Lord of Destruction,Blizzard North)\n\n### Test Sentence: Blizzard North, who was developing the sequel Diablo II, thus imposed numerous restrictions upon Synergistic Software's development of Hellfire.\n\n### Test Output:"}
{"id": "ont_6_computer_test_49", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The game was developed by Gearbox Software and Valve and published by Sierra On-Line for Windows on November 19, 1999.\n\n### Example Output: developer(Half-Life: Opposing Force,Gearbox Software)\n\n### Test Sentence: Released in December 1998 for Microsoft Windows and June 1999 for Mac OS, StarCraft : Brood War was co-developed by Saffire and Blizzard Entertainment.\n\n### Test Output:"}
{"id": "ont_6_computer_test_50", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: DC/OSx (DataCenter/OSx) is a discontinued Unix operating system for MIPS based systems developed by Pyramid Technology.\n\n### Example Output: developer(DC/OSx,Pyramid Technology)\n\n### Test Sentence: The PDP-8 Disk Monitor is a discontinued operating system released by Digital Equipment Corporation for 4K Disk Monitor System's PDP-8 line of mini-computers.\n\n### Test Output:"}
{"id": "ont_6_computer_test_51", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: TOPS-10 System (Timesharing / Total Operating System-10) is a discontinued operating system from Digital Equipment Corporation (DEC) for the PDP-10 (or DECsystem-10) mainframe computer family.\n\n### Example Output: developer(TOPS-10,Digital Equipment Corporation)\n\n### Test Sentence: RT-11 (\"RT\" for real-time) is a discontinued small, single-user real-time operating system for the Digital Equipment Corporation PDP-11 family of 16-bit computers.\n\n### Test Output:"}
{"id": "ont_6_computer_test_52", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: After a controversial 2010 redesign and the departure of co-founders Jay Adelson and Kevin Rose, in July 2012 Digg was sold in three parts: the Digg brand, website and technology were sold to Betaworks for an estimated $500,000; 15 staff were transferred to The Washington Post's \"SocialCode\" for a reported $12 million; and a suite of patents was sold to LinkedIn for about $4 million.\n\n### Example Output: creator(Digg,Kevin Rose)\n\n### Test Sentence: OS-9 was purchased by Radisys Corp in 2001, and was purchased again in 2013 by its current owner Microware LP.\n\n### Test Output:"}
{"id": "ont_6_computer_test_53", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Elder Scrolls III: Tribunal is the first expansion for Bethesda Game Studios' The Elder Scrolls III: Morrowind.\n\n### Example Output: developer(The Elder Scrolls III: Tribunal,Bethesda Game Studios)\n\n### Test Sentence: The Elder Scrolls III: Bloodmoon is the second expansion pack for The Elder Scrolls III: Morrowind, developed by Bethesda Game Studios.\n\n### Test Output:"}
{"id": "ont_6_computer_test_54", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Opera Coast was a free web browser developed for iOS devices by Opera Software.\n\n### Example Output: developer(Opera Coast,Opera Software)\n\n### Test Sentence: Opera Mobile is a mobile web browser for smartphones, tablets and PDAs developed by Opera Software AS.\n\n### Test Output:"}
{"id": "ont_6_computer_test_55", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Crysis Warhead is a first-person shooter video game developed by the Hungarian studio Crytek Budapest and published by Electronic Arts.\n\n### Example Output: developer(Crysis Warhead,Crytek)\n\n### Test Sentence: Doom 3: Resurrection of Evil is a first-person shooter video game developed by Nerve Software and published by Activision.\n\n### Test Output:"}
{"id": "ont_6_computer_test_56", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The expansion pack was developed by the team that created the mod with the assistance of SkyBox Labs, based in Vancouver.\n\n### Example Output: developer(Age of Empires II: The Forgotten,SkyBox Labs)\n\n### Test Sentence: Considered a user-made mod, the game was created by Canadian company Ossian Studios, headed by former BioWare employee Alan Miranda.\n\n### Test Output:"}
{"id": "ont_6_computer_test_57", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Sonic Pi is a live coding environment based on Ruby, originally designed to support both computing and music lessons in schools, developed by Sam Aaron in the University of Cambridge Computer Laboratory in collaboration with Raspberry Pi Foundation.\n\n### Example Output: creator(Sonic Pi,Sam Aaron)\n\n### Test Sentence: WaveLab is a digital audio editor and recording computer software application for Windows and macOS, created by Steinberg.\n\n### Test Output:"}
{"id": "ont_6_computer_test_58", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: EyeWriter was conceived by Mick Ebeling and developed at Ebeling's home in Venice Beach by artists and engineers from the Free Art & Technology Lab, Graffiti Research Lab and OpenFrameworks teams, including Zachary Lieberman, Evan Roth, James Powderly, Theo Watson and Chris Sugrue.\n\n### Example Output: creator(EyeWriter,Theo Watson)\n\n### Test Sentence: Blackmagic Fusion (formerly eyeon Fusion and briefly Maya Fusion, a version produced for Alias-Wavefront) is post-production image compositing developed by Blackmagic Design and originally authored by eyeon Software.\n\n### Test Output:"}
{"id": "ont_6_computer_test_59", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: TSX-Plus is a multi-user operating system for the PDP-11/LSI-11 series of computers.\n\n### Example Output: platform(TSX-Plus,PDP-11)\n\n### Test Sentence: RSTS (/rsts/) is a multi-user time-sharing operating system, initially developed by Evans Griffiths & Hart of Boston, and acquired by Digital Equipment Corporation (DEC, now part of Hewlett Packard) for the PDP-11 series of 16-bit minicomputers.\n\n### Test Output:"}
{"id": "ont_6_computer_test_60", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Heroes of Might and Magic III : Armageddon 's Blade was developed by New World Computing for Microsoft Windows and released by the 3DO Company in 1999.\n\n### Example Output: developer(Heroes of Might and Magic III: Armageddon's Blade,New World Computing)\n\n### Test Sentence: Heroes of Might and Magic III : The Shadow of Death was developed by New World Computing for Microsoft Windows and released by the 3DO Company in 2000.\n\n### Test Output:"}
{"id": "ont_6_computer_test_61", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The project has been superseded by the SeaMonkey Internet suite (SeaMonkey was the original code name for the project), a community-driven Internet suite that is based on the same source code, and continues to be developed with the newer Mozilla codebase.\n\n### Example Output: derivative_work(Mozilla Application Suite,SeaMonkey)\n\n### Test Sentence: SpiderMonkey is the code name for the first JavaScript engine, written by Brendan Eich at Netscape Communications, later released as open-source and currently maintained by the Mozilla Foundation.\n\n### Test Output:"}
{"id": "ont_6_computer_test_62", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Ain't Ai n't It Cool News Cool News (AICN) is a website founded by Harry Knowles and run by his sister Dannie Knowles since September 2017, dedicated to news, rumors, and reviews of upcoming and current films, television, and comic book projects, with an emphasis on science fiction, superhero, fantasy, horror, and action genres.\n\n### Example Output: creator(Ain't It Cool News,Harry Knowles)\n\n### Test Sentence: Exscientologykids.com is a website launched in 2008 by Kendra Wiseman, Astra Woodcraft and Jenna Miscavige Hill.\n\n### Test Output:"}
{"id": "ont_6_computer_test_63", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The File Retrieval and Editing SyStem, or FRESS, was a hypertext system developed at Brown University starting in 1968 by Andries van Dam and his students, including Bob Wallace.\n\n### Example Output: creator(File Retrieval and Editing System,Andries van Dam)\n\n### Test Sentence: The Interactive Encyclopedia System, or TIES, was a hypertext system developed in the University of Maryland Human-Computer Interaction Lab by Ben Shneiderman in 1983.\n\n### Test Output:"}
{"id": "ont_6_computer_test_64", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The File Retrieval and Editing SyStem, or FRESS, was a hypertext system developed at Brown University starting in 1968 by Andries van Dam and his students, including Bob Wallace.\n\n### Example Output: creator(File Retrieval and Editing System,Andries van Dam)\n\n### Test Sentence: ENQUIRE was a  software project written in 1980 by Tim Berners-Lee at CERN, which was the predecessor to the World Wide Web.\n\n### Test Output:"}
{"id": "ont_6_computer_test_65", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Truth or Consequences is an American game show originally hosted on NBC radio by Ralph Edwards (1940-1957) and later on television by Edwards (1950-1954), Jack Bailey (1954-1956), Bob Barker (1956-1975), Steve Dunne (1957-58), Bob Hilton (1977-1978) and Larry Anderson (1987-1988).\n\n### Example Output: creator(Truth or Consequences,Ralph Edwards)\n\n### Test Sentence: The program has been hosted by 12 different moderators to date, beginning with creator Martha Rountree.\n\n### Test Output:"}
{"id": "ont_6_computer_test_66", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: In April 2009, the website's founders (Peter Sunde, Fredrik Neij, and Gottfrid Svartholm) were found guilty in the Pirate Bay trial in Sweden for assisting in copyright infringement and were sentenced to serve one year in prison and pay a fine.\n\n### Example Output: creator(The Pirate Bay,Fredrik Neij)\n\n### Test Sentence: In April 2009, the website's founders (Peter Sunde, Fredrik Neij, and Gottfrid Svartholm) were found guilty in the Pirate Bay trial in Sweden for assisting in copyright infringement and were sentenced to serve one year in prison and pay a fine.\n\n### Test Output:"}
{"id": "ont_6_computer_test_67", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1994; the PHP reference implementation is now produced by The PHP Group.\n\n### Example Output: creator(PHP,Rasmus Lerdorf)\n\n### Test Sentence: Under Carmony's direction, Linspire started and sponsored Nvu, hiring Daniel Glazman, former Netscape Communications Corporation employee, to be the lead developer.\n\n### Test Output:"}
{"id": "ont_6_computer_test_68", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: PROSITE was created in 1988 by Amos Bairoch, who directed the group for more than 20 years.\n\n### Example Output: creator(PROSITE,Amos Bairoch)\n\n### Test Sentence: The site was founded by political consultant Floyd Brown in 2008.\n\n### Test Output:"}
{"id": "ont_6_computer_test_69", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Sci-Hub was founded by Alexandra Elbakyan in 2011 in Kazakhstan in response to the high cost of research papers behind paywalls.\n\n### Example Output: creator(Sci-Hub,Alexandra Elbakyan)\n\n### Test Sentence: Ethereum was proposed in late 2013 by Vitalik Buterin, a cryptocurrency researcher and programmer.\n\n### Test Output:"}
{"id": "ont_6_computer_test_70", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Ultima Online : Samurai Empire was developed and published by Electronic Arts and released on November 2, 2004.\n\n### Example Output: developer(Ultima Online: Samurai Empire,Electronic Arts)\n\n### Test Sentence: NationStates was created by Max Barry and was publicly released on 13 November 2002, based loosely on his novel Jennifer Government.\n\n### Test Output:"}
{"id": "ont_6_computer_test_71", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: OCB mode was designed by Phillip Rogaway, who credits Mihir Bellare, John Black, and Ted Krovetz with assistance and comments on the designs.\n\n### Example Output: discoverer_or_inventor(OCB mode,Phillip Rogaway)\n\n### Test Sentence: The Olney Hymns /oni/ were first published in February 1779 and are the combined work of curate John Newton (1725-1807) and his poet friend, William Cowper (1731-1800).\n\n### Test Output:"}
{"id": "ont_6_computer_test_72", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: EyeWriter was conceived by Mick Ebeling and developed at Ebeling's home in Venice Beach by artists and engineers from the Free Art & Technology Lab, Graffiti Research Lab and OpenFrameworks teams, including Zachary Lieberman, Evan Roth, James Powderly, Theo Watson and Chris Sugrue.\n\n### Example Output: creator(EyeWriter,Theo Watson)\n\n### Test Sentence: VDR was originally written by Klaus-Peter Schmidinger, one of the founders of CadSoft Computer GmbH and original developer of the EAGLE electronic design application.\n\n### Test Output:"}
{"id": "ont_6_computer_test_73", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The File Retrieval and Editing SyStem, or FRESS, was a hypertext system developed at Brown University starting in 1968 by Andries van Dam and his students, including Bob Wallace.\n\n### Example Output: creator(File Retrieval and Editing System,Andries van Dam)\n\n### Test Sentence: The Hypertext Editing System, or HES, was an early hypertext research project conducted at Brown University in 1967 by Andries van Dam, Ted Nelson, and several Brown students.\n\n### Test Output:"}
{"id": "ont_6_computer_test_74", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Created by Roone Arledge, the program featured Ted Koppel as Nightline's main anchor from March 1980 until his retirement in November 2005.\n\n### Example Output: creator(Nightline,Roone Arledge)\n\n### Test Sentence: Created by Robert Northshield and original host Charles Kuralt, the 90-minute program currently airs Sundays from 9:00 a.m. to 10:30 a.m. Eastern, and from 6:00 a.m. to 7:30 a.m. Pacific and in most time zones (live in the Eastern and Pacific time zones, and on tape delay elsewhere).\n\n### Test Output:"}
{"id": "ont_6_computer_test_75", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: RISC OS /rskos/ is a computer operating system originally designed by Acorn Computers Ltd in Cambridge, England.\n\n### Example Output: developer(RISC OS,Acorn Computers)\n\n### Test Sentence: Cleverbot was created by British AI scientist Rollo Carpenter.\n\n### Test Output:"}
{"id": "ont_6_computer_test_76", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Indigenous Tweets was founded in March 2011 by Kevin Scannell, who does research in computational linguistics in the Department of Mathematics and Computer Science at Saint Louis University in St. Louis, Missouri, United States.\n\n### Example Output: creator(Indigenous Tweets,Kevin Scannell)\n\n### Test Sentence: Twitter was created by Jack Dorsey, Noah Glass, Biz Stone, and Evan Williams in March 2006 and launched in July of that year.\n\n### Test Output:"}
{"id": "ont_6_computer_test_77", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: In July 2012, Opera Software reported that Opera Mini had 168.8 million users as of March 2012.\n\n### Example Output: developer(Opera Mini,Opera Software)\n\n### Test Sentence: The service was founded in 2008 by Marco Arment and has around 2Â million users as of late 2011.\n\n### Test Output:"}
{"id": "ont_6_computer_test_78", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Kiwix is a free and open-source offline web browser created by Emmanuel Engelhart and Renaud Gaudin in 2007.\n\n### Example Output: creator(Kiwix,Renaud Gaudin)\n\n### Test Sentence: ikiwiki is a free and open-source wiki application, designed by Joey Hess.\n\n### Test Output:"}
{"id": "ont_6_computer_test_79", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: EyeWriter was conceived by Mick Ebeling and developed at Ebeling's home in Venice Beach by artists and engineers from the Free Art & Technology Lab, Graffiti Research Lab and OpenFrameworks teams, including Zachary Lieberman, Evan Roth, James Powderly, Theo Watson and Chris Sugrue.\n\n### Example Output: creator(EyeWriter,Theo Watson)\n\n### Test Sentence: Zend Engine was originally developed by Andi Gutmans and Zeev Suraski while they were students at the Technion - Israel Institute of Technology.\n\n### Test Output:"}
{"id": "ont_6_computer_test_80", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The MacTutor History of Mathematics archive is a website maintained by John J. O'Connor and Edmund F. Robertson and hosted by the University of St Andrews in Scotland.\n\n### Example Output: creator(MacTutor History of Mathematics archive,John O'Connor)\n\n### Test Sentence: The site was created and is run by Jason Scott.\n\n### Test Output:"}
{"id": "ont_6_computer_test_81", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Ain't Ai n't It Cool News Cool News (AICN) is a website founded by Harry Knowles and run by his sister Dannie Knowles since September 2017, dedicated to news, rumors, and reviews of upcoming and current films, television, and comic book projects, with an emphasis on science fiction, superhero, fantasy, horror, and action genres.\n\n### Example Output: creator(Ain't It Cool News,Harry Knowles)\n\n### Test Sentence: Founded by brothers Lasantha Wickrematunge and Lal Wickrematunge, the newspaper is known for Iruresa's outspoken and controversial news coverage.\n\n### Test Output:"}
{"id": "ont_6_computer_test_82", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Billoo (Hindi: ) is an Indian comic character  created by Pran Kumar Sharma.\n\n### Example Output: creator(Billoo,Pran Kumar Sharma)\n\n### Test Sentence: Dilbert is an American comic strip written and illustrated by Scott Adams, first published on April 16, 1989.\n\n### Test Output:"}
{"id": "ont_6_computer_test_83", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Truth or Consequences is an American game show originally hosted on NBC radio by Ralph Edwards (1940-1957) and later on television by Edwards (1950-1954), Jack Bailey (1954-1956), Bob Barker (1956-1975), Steve Dunne (1957-58), Bob Hilton (1977-1978) and Larry Anderson (1987-1988).\n\n### Example Output: creator(Truth or Consequences,Ralph Edwards)\n\n### Test Sentence: Vic and Sade was an American radio program created and written by Paul Rhymer.\n\n### Test Output:"}
{"id": "ont_6_computer_test_84", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The initial design of the British bombe was produced in 1939 at the UK Government Code and Cypher School (GC&CS) at Bletchley Park by Alan Turing, with an important refinement devised in 1940 by Gordon Welchman.\n\n### Example Output: discoverer_or_inventor(Bombe,Alan Turing)\n\n### Test Sentence: The D'Agapeyeff cipher is an as-yet unbroken cipher that appears in the first edition of Codes and Ciphers, an elementary book on cryptography published by the Russian-born English cryptographer and cartographer Alexander D'Agapeyeff in 1939.\n\n### Test Output:"}
{"id": "ont_6_computer_test_85", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: In April 2009, the website's founders (Peter Sunde, Fredrik Neij, and Gottfrid Svartholm) were found guilty in the Pirate Bay trial in Sweden for assisting in copyright infringement and were sentenced to serve one year in prison and pay a fine.\n\n### Example Output: creator(The Pirate Bay,Fredrik Neij)\n\n### Test Sentence: In April 2009, the website's founders (Peter Sunde, Fredrik Neij, and Gottfrid Svartholm) were found guilty in the Pirate Bay trial in Sweden for assisting in copyright infringement and were sentenced to serve one year in prison and pay a fine.\n\n### Test Output:"}
{"id": "ont_6_computer_test_86", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Created by Roone Arledge, the program featured Ted Koppel as Nightline's main anchor from March 1980 until his retirement in November 2005.\n\n### Example Output: creator(Nightline,Roone Arledge)\n\n### Test Sentence: Everyday Elegance is an American lifestyle television program hosted by Colin Cowie.\n\n### Test Output:"}
{"id": "ont_6_computer_test_87", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Kiwix is a free and open-source offline web browser created by Emmanuel Engelhart and Renaud Gaudin in 2007.\n\n### Example Output: creator(Kiwix,Renaud Gaudin)\n\n### Test Sentence: Newsbeuter was originally written by Andreas Krennmair in 2007 and released under the MIT License.\n\n### Test Output:"}
{"id": "ont_6_computer_test_88", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: In April 2009, the website's founders (Peter Sunde, Fredrik Neij, and Gottfrid Svartholm) were found guilty in the Pirate Bay trial in Sweden for assisting in copyright infringement and were sentenced to serve one year in prison and pay a fine.\n\n### Example Output: creator(The Pirate Bay,Fredrik Neij)\n\n### Test Sentence: The company's founder, New Zealand resident Kim Dotcom, has denied any wrongdoing, and the case against Dotcom has been the subject of controversy over Megaupload's legality.\n\n### Test Output:"}
{"id": "ont_6_computer_test_89", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Severny Vestnik (Russian:  , English: The Northern Messenger) was an influential Russian literary magazine founded in Saint Petersburg in 1885  by Anna Yevreinova, who stayed with it until 1889.\n\n### Example Output: creator(Severny Vestnik,Anna Yevreinova)\n\n### Test Sentence: Meduza is a Riga-based online newspaper and news aggregator in the Russian language, headed by Galina Timchenko, the former editor-in-chief of Russian news website Lenta.ru.\n\n### Test Output:"}
{"id": "ont_6_computer_test_90", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Kiwix is a free and open-source offline web browser created by Emmanuel Engelhart and Renaud Gaudin in 2007.\n\n### Example Output: creator(Kiwix,Renaud Gaudin)\n\n### Test Sentence: Kiwix is a free and open-source offline web browser created by Emmanuel Engelhart and Renaud Gaudin in 2007.\n\n### Test Output:"}
{"id": "ont_6_computer_test_91", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Created by Roone Arledge, the program featured Ted Koppel as Nightline's main anchor from March 1980 until his retirement in November 2005.\n\n### Example Output: creator(Nightline,Roone Arledge)\n\n### Test Sentence: Once this was dropped from the 24-hour news channel, controller of the then BBC Choice, Stuart Murphy, took the format and brought Liquid News to the channel where it soon became the flagship programme.\n\n### Test Output:"}
{"id": "ont_6_computer_test_92", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The founders are Dmitry Semyachkin, Mikhail Sergeev and Evgeny Kislyak.\n\n### Example Output: creator(CyberLeninka,Dmitry Semyachkin)\n\n### Test Sentence: The program was created by Colbert, Jon Stewart, and Ben Karlin.\n\n### Test Output:"}
{"id": "ont_6_computer_test_93", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: QRpedia was conceived by Roger Bamkin, a Wikipedia volunteer, coded by Terence Eden, and unveiled in April 2011.\n\n### Example Output: creator(QRpedia,Terence Eden)\n\n### Test Sentence: The site is the creation of William P. Thayer.\n\n### Test Output:"}
{"id": "ont_6_computer_test_94", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1994; the PHP reference implementation is now produced by The PHP Group.\n\n### Example Output: creator(PHP,Rasmus Lerdorf)\n\n### Test Sentence: WikiWikiWeb was launched on 25 March 1995 by its inventor, programmer Ward Cunningham, to accompany the Portland Pattern Repository website discussing software design patterns.\n\n### Test Output:"}
{"id": "ont_6_computer_test_95", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The founders are Dmitry Semyachkin, Mikhail Sergeev and Evgeny Kislyak.\n\n### Example Output: creator(CyberLeninka,Dmitry Semyachkin)\n\n### Test Sentence: The program was created by Cenk Uygur, Ben Mankiewicz, and Dave Koller.\n\n### Test Output:"}
{"id": "ont_6_computer_test_96", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Created by Steve Coast in the UK in 2004, OpenStreetMap was inspired by the success of Wikipedia and the predominance of proprietary map data in the UK and elsewhere.\n\n### Example Output: creator(OpenStreetMap,Steve Coast)\n\n### Test Sentence: Tarsnap was created in 2008 by Colin Percival.\n\n### Test Output:"}
{"id": "ont_6_computer_test_97", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: EyeWriter was conceived by Mick Ebeling and developed at Ebeling's home in Venice Beach by artists and engineers from the Free Art & Technology Lab, Graffiti Research Lab and OpenFrameworks teams, including Zachary Lieberman, Evan Roth, James Powderly, Theo Watson and Chris Sugrue.\n\n### Example Output: creator(EyeWriter,Theo Watson)\n\n### Test Sentence: Zend Engine was originally developed by Andi Gutmans and Zeev Suraski while they were students at the Technion - Israel Institute of Technology.\n\n### Test Output:"}
{"id": "ont_6_computer_test_98", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Operating System Embedded (OSE) is a real-time embedded operating system created by the Swedish information technology company ENEA AB.\n\n### Example Output: developer(Operating System Embedded,ENEA AB)\n\n### Test Sentence: The dictionary is hosted in Norway and maintained by medical historian Ole Daniel Enersen.\n\n### Test Output:"}
{"id": "ont_6_computer_test_99", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: My Boyfriend Came Back From the War is a browser-based internet artwork created in 1996 by Russian artist Olia Lialina.\n\n### Example Output: creator(My Boyfriend Came Back From The War,Olia Lialina)\n\n### Test Sentence: The creator of the website has been a closely guarded secret, though the piece has recently been claimed by artist Martine Neddam.\n\n### Test Output:"}
{"id": "ont_6_computer_test_100", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Created by Steve Coast in the UK in 2004, OpenStreetMap was inspired by the success of Wikipedia and the predominance of proprietary map data in the UK and elsewhere.\n\n### Example Output: creator(OpenStreetMap,Steve Coast)\n\n### Test Sentence: The following year, Time magazine stated that the open-door policy of allowing anyone to edit had made Wikipedia the biggest and possibly the best encyclopedia in the world, and was a testament to the vision of Jimmy Wales.\n\n### Test Output:"}
{"id": "ont_6_computer_test_101", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: RISC OS /rskos/ is a computer operating system originally designed by Acorn Computers Ltd in Cambridge, England.\n\n### Example Output: developer(RISC OS,Acorn Computers)\n\n### Test Sentence: Applesoft BASIC is a dialect of Microsoft BASIC, developed by Marc McDonald and Ric Weiland,  supplied with the Apple II series of computers.\n\n### Test Output:"}
{"id": "ont_6_computer_test_102", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Teenage Mutant Ninja Turtles were created by Kevin Eastman and Peter Laird.\n\n### Example Output: creator(Teenage Mutant Ninja Turtles,Peter Laird)\n\n### Test Sentence: Teenage Mutant Ninja Turtles were created by Kevin Eastman and Peter Laird.\n\n### Test Output:"}
{"id": "ont_6_computer_test_103", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: On July 22, 1919, U.S. Patent 1,310,719 was issued to Gilbert Vernam for the XOR operation used for the encryption of a one-time pad.\n\n### Example Output: discoverer_or_inventor(one-time pad,Gilbert Vernam)\n\n### Test Sentence: Phil Zimmermann developed PGP in 1991.\n\n### Test Output:"}
{"id": "ont_6_computer_test_104", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Geraldo Rivera Reports, also known as Geraldo at Large, is an American television newsmagazine hosted by Fox News correspondent-at-large and former talk show host Geraldo Rivera.\n\n### Example Output: creator(Geraldo at Large,Geraldo Rivera)\n\n### Test Sentence: Re:Gex is a comic book created by Rob Liefeld and published through Awesome Comics.\n\n### Test Output:"}
{"id": "ont_6_computer_test_105", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Sci-Hub was founded by Alexandra Elbakyan in 2011 in Kazakhstan in response to the high cost of research papers behind paywalls.\n\n### Example Output: creator(Sci-Hub,Alexandra Elbakyan)\n\n### Test Sentence: The Million Dollar Homepage is a website conceived in 2005 by Alex Tew, a student from Wiltshire, England, to raise money for his university education.\n\n### Test Output:"}
{"id": "ont_6_computer_test_106", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Created by Roone Arledge, the program featured Ted Koppel as Nightline's main anchor from March 1980 until his retirement in November 2005.\n\n### Example Output: creator(Nightline,Roone Arledge)\n\n### Test Sentence: Debuting in 1968, the program was created by Don Hewitt, who chose to set 60 Minutes apart from other news programs by using a unique style of reporter-centered investigation.\n\n### Test Output:"}
{"id": "ont_6_computer_test_107", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The File Retrieval and Editing SyStem, or FRESS, was a hypertext system developed at Brown University starting in 1968 by Andries van Dam and his students, including Bob Wallace.\n\n### Example Output: creator(File Retrieval and Editing System,Andries van Dam)\n\n### Test Sentence: Project Xanadu (/zÃ¦ndu/ ZAN--doo) was the first hypertext project, founded in 1960 by Ted Nelson.\n\n### Test Output:"}
{"id": "ont_6_computer_test_108", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The founders are Dmitry Semyachkin, Mikhail Sergeev and Evgeny Kislyak.\n\n### Example Output: creator(CyberLeninka,Dmitry Semyachkin)\n\n### Test Sentence: The program was created by Colbert, Jon Stewart, and Ben Karlin.\n\n### Test Output:"}
{"id": "ont_6_computer_test_109", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: QRpedia was conceived by Roger Bamkin, a Wikipedia volunteer, coded by Terence Eden, and unveiled in April 2011.\n\n### Example Output: creator(QRpedia,Terence Eden)\n\n### Test Sentence: Listen to Wikipedia, also known as L2W or Hatnote: Listen To Wikipedia, is a multimedia visualizer developed by Mahmoud Hashemi and Stephen LaPorte, which translates recent Wikipedia edits into a display of visuals and sounds.\n\n### Test Output:"}
{"id": "ont_6_computer_test_110", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: EDS was a 1978-1981 research project at Brown University by Steven Feiner, Sandor Nagy and Andries van Dam.\n\n### Example Output: creator(Electronic Document System,Sandor Nagy)\n\n### Test Sentence: EDS was a 1978-1981 research project at Brown University by Steven Feiner, Sandor Nagy and Andries van Dam.\n\n### Test Output:"}
{"id": "ont_6_computer_test_111", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: River Raid is a vertically scrolling shooter designed and programmed by Carol Shaw and published by Activision in 1982 for the Atari 2600 video game console.\n\n### Example Output: creator(River Raid,Carol Shaw)\n\n### Test Sentence: Caverns of Mars is a vertically-scrolling shooter for the Atari 8-bit family of home computers.\n\n### Test Output:"}
{"id": "ont_6_computer_test_112", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Ballblazer was originally released for the Atari 8-bit family, then ported to the Atari 5200, Apple II, ZX Spectrum, Amstrad CPC, Commodore 64, MSX.\n\n### Example Output: platform(Ballblazer,Amstrad CPC)\n\n### Test Sentence: Mighty Bomb Jack (, Maiti Bon Jakku) is a 1986 Nintendo Entertainment System (NES) game released by Tecmo, which was later ported to the Amiga, Atari ST and Commodore 64.\n\n### Test Output:"}
{"id": "ont_6_computer_test_113", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: From 1985 to 1988, the game was released for the Apple II, Atari 7800, ZX Spectrum, Acorn Electron, BBC Micro, Amstrad CPC, and Master System.\n\n### Example Output: platform(Impossible Mission,Amstrad CPC)\n\n### Test Sentence: Versions were released for the Nabu Network, Commodore 64, Atari 8-bit family, ColecoVision, ZX Spectrum, MSX, and Apple II.\n\n### Test Output:"}
{"id": "ont_6_computer_test_114", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: CP/M, originally standing for Control Program/Monitor and later Control Program for Microcomputers, is a mass-market operating system created in 1974 for Intel 8080/85-based microcomputers by Gary Kildall of Digital Research, Inc.\n\n### Example Output: creator(CP/M,Gary Kildall)\n\n### Test Sentence: The GM-NAA I/O input/output system of General Motors and North American Aviation was the first operating system for the IBM 704 computer.\n\n### Test Output:"}
{"id": "ont_6_computer_test_115", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Laser Squad is a turn-based tactics video game, originally released for the ZX Spectrum and later for the Commodore 64, Amstrad CPC, MSX, Amiga, Sharp MZ-800 and Atari ST and PC computers between 1988 and 1992.\n\n### Example Output: platform(Laser Squad,Amstrad CPC)\n\n### Test Sentence: Zynaps is a side-scrolling shoot 'em up video game published by Hewson Consultants for the ZX Spectrum, Amstrad CPC and Commodore 64 in 1987 and for the Atari ST in 1988 and the Amiga.\n\n### Test Output:"}
{"id": "ont_6_computer_test_116", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: OS/390 is an IBM operating system for the System/390 IBM mainframe computers.\n\n### Example Output: developer(OS/390,IBM)\n\n### Test Sentence: SOS initially ran on the IBM 709 computer and was then ported to SHARE Operating System's transistorized successor, the IBM 7090.\n\n### Test Output:"}
{"id": "ont_6_computer_test_117", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: In 2003, Red Hat discontinued the Red Hat Linux line in favor of Red Hat Enterprise Linux (RHEL) for enterprise environments.\n\n### Example Output: derivative_work(Red Hat Linux,Red Hat Enterprise Linux)\n\n### Test Sentence: Red Hat Enterprise Linux is released in server versions for x86-64, Power ISA, ARM64, and IBM Z and a desktop version for x86-64.\n\n### Test Output:"}
{"id": "ont_6_computer_test_118", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Home computer ports of Blasteroids were released by Image Works for the Amiga, Amstrad CPC, Atari ST, Commodore 64, MSX, MS-DOS, and ZX Spectrum.\n\n### Example Output: platform(Blasteroids,Atari ST)\n\n### Test Sentence: Home computer ports of Blasteroids were released by Image Works for the Amiga, Amstrad CPC, Atari ST, Commodore 64, MSX, MS-DOS, and ZX Spectrum.\n\n### Test Output:"}
{"id": "ont_6_computer_test_119", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Yie Ar Kung-Fu II was released for the Commodore 64, MSX, Amstrad CPC, ZX Spectrum, BBC Micro and Acorn Electron home computer systems and featured a different approach to the game.\n\n### Example Output: platform(Yie Ar Kung-Fu II,Commodore 64)\n\n### Test Sentence: The Commodore 64 version was considerably different in gameplay to the ZX Spectrum and Amstrad CPC versions.\n\n### Test Output:"}
{"id": "ont_6_computer_test_120", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Archon was originally written for the Atari 8-bit family and then ported to the Apple II, Commodore 64, Amstrad CPC, ZX Spectrum, Amiga, IBM PC, Macintosh, PC-88, and NES.\n\n### Example Output: platform(Archon: The Light and the Dark,Commodore 64)\n\n### Test Sentence: Archon was originally written for the Atari 8-bit family and then ported to the Apple II, Commodore 64, Amstrad CPC, ZX Spectrum, Amiga, IBM PC, Macintosh, PC-88, and NES.\n\n### Test Output:"}
{"id": "ont_6_computer_test_121", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: At the time of introduction, these systems ran the IRIX 6.4, and later, the IRIX 6.5 operating systems.\n\n### Example Output: operating_system(SGI Origin 200,IRIX)\n\n### Test Sentence: GS/OS was included as a component of Apple IIGS System Software versions 4.0 through 6.0.1.\n\n### Test Output:"}
{"id": "ont_6_computer_test_122", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The game was ported to the Atari 8-bit family, Commodore 64, Atari 2600, and Atari 5200 and renamed to The Incredible Wizard for the Bally Astrocade.\n\n### Example Output: platform(Wizard of Wor,Commodore 64)\n\n### Test Sentence: Xevious ran on the Namco Galaga arcade system.\n\n### Test Output:"}
{"id": "ont_6_computer_test_123", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: 007 : Licence to Kill was released for Amiga, Amstrad CPC, Atari ST, BBC Micro, Commodore 64, DOS, MSX and ZX Spectrum.\n\n### Example Output: platform(007: Licence to Kill,BBC Micro)\n\n### Test Sentence: James Pond: Underwater Agent is a platform video game that was developed by British video game developer Millennium Interactive and published by Millennium Interactive and Electronic Arts for the Amiga, Atari ST, Acorn Archimedes, and Sega Genesis.\n\n### Test Output:"}
{"id": "ont_6_computer_test_124", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Zork III was released for the Amstrad CPC, Apple II, Atari 8-bit family, Commodore 64, CP/M, IBM PC (as a self-booting disk), MSX, TRS-80, then later for Macintosh, Atari ST, and Amiga.\n\n### Example Output: platform(Zork III,Atari ST)\n\n### Test Sentence: The Lost Treasures of Infocom was available in MS-DOS, Macintosh, Amiga, and Apple IIGS versions, as well as a cross-platform CD-ROM version, followed by a re-release on the Apple Computer iOS platform in 2012.\n\n### Test Output:"}
{"id": "ont_6_computer_test_125", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Battle Chess was originally developed and released by Interplay Entertainment for the Amiga in 1988 and subsequently on many other systems, including 3DO Interactive Multiplayer, Acorn Archimedes, Amiga CD32, Amiga CDTV, Apple IIGS, Apple IIe, Atari ST, Commodore 64, MS-DOS, FM Towns, NES, Mac OS, NEC PC-9801, X68000 and Microsoft Windows.\n\n### Example Output: platform(Battle Chess,Apple IIGS)\n\n### Test Sentence: Battle Chess was originally developed and released by Interplay Entertainment for the Amiga in 1988 and subsequently on many other systems, including 3DO Interactive Multiplayer, Acorn Archimedes, Amiga CD32, Amiga CDTV, Apple IIGS, Apple IIe, Atari ST, Commodore 64, MS-DOS, FM Towns, NES, Mac OS, NEC PC-9801, X68000 and Microsoft Windows.\n\n### Test Output:"}
{"id": "ont_6_computer_test_126", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: From 1985 to 1988, the game was released for the Apple II, Atari 7800, ZX Spectrum, Acorn Electron, BBC Micro, Amstrad CPC, and Master System.\n\n### Example Output: platform(Impossible Mission,Amstrad CPC)\n\n### Test Sentence: 10th Frame was released for the Amstrad CPC, Atari ST, Commodore 64, IBM PC compatibles, MSX, and ZX Spectrum.\n\n### Test Output:"}
{"id": "ont_6_computer_test_127", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: WAITS was a heavily modified variant of Digital Equipment Corporation's Monitor operating system (later renamed to, and better known as, \"TOPS-10\") for the PDP-6 and PDP-10 mainframe computers, used at the Stanford Artificial Intelligence Laboratory (SAIL) from the mid-1960s up until 1991; the mainframe computer it ran on also went by the name of \"SAIL\".\n\n### Example Output: platform(WAITS,PDP-6)\n\n### Test Sentence: Berkeley Timesharing System was designed as part of Project Genie and marketed by Scientific Data Systems for the SDS 940 computer system.\n\n### Test Output:"}
{"id": "ont_6_computer_test_128", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: II: Grog's Revenge is a 1984 video game by Sydney Development for the Commodore 64, ColecoVision, Coleco ADAM, and MSX.\n\n### Example Output: platform(B.C. II: Grog's Revenge,Commodore 64)\n\n### Test Sentence: Dedal is a maze video game developed by C. Roman and G. Pollet, released on Oric in 1984.\n\n### Test Output:"}
{"id": "ont_6_computer_test_129", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: From 1985 to 1988, the game was released for the Apple II, Atari 7800, ZX Spectrum, Acorn Electron, BBC Micro, Amstrad CPC, and Master System.\n\n### Example Output: platform(Impossible Mission,Amstrad CPC)\n\n### Test Sentence: Rescue on Fractalus ! was also ported to other popular platforms of the day, such as the Apple II, ZX Spectrum (by Dalali Software Ltd), Amstrad CPC, Tandy Color Computer 3 and Commodore 64.\n\n### Test Output:"}
{"id": "ont_6_computer_test_130", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The game was released on the TRS-80 in 1982, then ported to the Apple II, Atari 8-bit family, and Commodore 64.\n\n### Example Output: platform(Dunzhin,Commodore 64)\n\n### Test Sentence: Using the MIDI ports on the Atari ST, the game is said to have introduced deathmatch combat to gaming in 1987.\n\n### Test Output:"}
{"id": "ont_6_computer_test_131", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Yie Ar Kung-Fu II was released for the Commodore 64, MSX, Amstrad CPC, ZX Spectrum, BBC Micro and Acorn Electron home computer systems and featured a different approach to the game.\n\n### Example Output: platform(Yie Ar Kung-Fu II,Commodore 64)\n\n### Test Sentence: Yie Ar Kung-Fu II was released for the Commodore 64, MSX, Amstrad CPC, ZX Spectrum, BBC Micro and Acorn Electron home computer systems and featured a different approach to the game.\n\n### Test Output:"}
{"id": "ont_6_computer_test_132", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Faery Tale Adventure is a 1987 action role-playing video game designed by David Joiner and published by MicroIllusions for the Amiga, and later ported to the Commodore 64, MS-DOS, and Sega Genesis.\n\n### Example Output: platform(The Faery Tale Adventure,Commodore 64)\n\n### Test Sentence: DuckTales: The Quest for Gold is a platform game developed by Incredible Technologies for the Amiga, Apple II, Commodore 64 and DOS.\n\n### Test Output:"}
{"id": "ont_6_computer_test_133", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Oryx/Pecos is a proprietary operating system developed from scratch by Bell Labs beginning in 1978 for the express purpose of running AT&T's large-scale PBX switching equipment.\n\n### Example Output: developer(Oryx/Pecos,Bell Labs)\n\n### Test Sentence: BESYS (Bell Operating System) was an early computing environment originally implemented as a batch processing operating system in 1957 at Bell Labs for the IBM 704 computer.\n\n### Test Output:"}
{"id": "ont_6_computer_test_134", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: HDOS is an early microcomputer operating system, originally written for the Heathkit H8 computer system and later also available for the Heathkit H89 and Zenith Z-89 computers.\n\n### Example Output: platform(HDOS,Heathkit H8)\n\n### Test Sentence: HDOS is an early microcomputer operating system, originally written for the Heathkit H8 computer system and later also available for the Heathkit H89 and Zenith Z-89 computers.\n\n### Test Output:"}
{"id": "ont_6_computer_test_135", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Yie Ar Kung-Fu II was released for the Commodore 64, MSX, Amstrad CPC, ZX Spectrum, BBC Micro and Acorn Electron home computer systems and featured a different approach to the game.\n\n### Example Output: platform(Yie Ar Kung-Fu II,Commodore 64)\n\n### Test Sentence: Yie Ar Kung-Fu II was released for the Commodore 64, MSX, Amstrad CPC, ZX Spectrum, BBC Micro and Acorn Electron home computer systems and featured a different approach to the game.\n\n### Test Output:"}
{"id": "ont_6_computer_test_136", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: From 1985 to 1988, the game was released for the Apple II, Atari 7800, ZX Spectrum, Acorn Electron, BBC Micro, Amstrad CPC, and Master System.\n\n### Example Output: platform(Impossible Mission,Amstrad CPC)\n\n### Test Sentence: The game was released for the Amstrad CPC, Commodore 64, Elan Enterprise 64 and 128 and ZX Spectrum platforms.\n\n### Test Output:"}
{"id": "ont_6_computer_test_137", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Activision Decathlon was ported to the Atari 8-bit family, Atari 5200, Commodore 64, ColecoVision, and MSX.\n\n### Example Output: platform(The Activision Decathlon,MSX)\n\n### Test Sentence: The Activision Decathlon was ported to the Atari 8-bit family, Atari 5200, Commodore 64, ColecoVision, and MSX.\n\n### Test Output:"}
{"id": "ont_6_computer_test_138", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Wargame Construction Set was released for the Amiga, Atari 8-bit family, Atari ST, Commodore 64, and MS-DOS.\n\n### Example Output: platform(Wargame Construction Set,Atari 8-bit family)\n\n### Test Sentence: Wargame Construction Set was released for the Amiga, Atari 8-bit family, Atari ST, Commodore 64, and MS-DOS.\n\n### Test Output:"}
{"id": "ont_6_computer_test_139", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: From 1985 to 1988, the game was released for the Apple II, Atari 7800, ZX Spectrum, Acorn Electron, BBC Micro, Amstrad CPC, and Master System.\n\n### Example Output: platform(Impossible Mission,Amstrad CPC)\n\n### Test Sentence: The game was published for Acorn Electron, Amstrad CPC, BBC Micro Model B, Commodore 64, Commodore VIC-20, Dragon 32, MSX, Oric Atmos, and ZX Spectrum at Â£8.95 for each part.\n\n### Test Output:"}
{"id": "ont_6_computer_test_140", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: RISC OS /rskos/ is a computer operating system originally designed by Acorn Computers Ltd in Cambridge, England.\n\n### Example Output: developer(RISC OS,Acorn Computers)\n\n### Test Sentence: Applesoft BASIC is a dialect of Microsoft BASIC, developed by Marc McDonald and Ric Weiland,  supplied with the Apple II series of computers.\n\n### Test Output:"}
{"id": "ont_6_computer_test_141", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The game was released on the TRS-80 in 1982, then ported to the Apple II, Atari 8-bit family, and Commodore 64.\n\n### Example Output: platform(Dunzhin,Commodore 64)\n\n### Test Sentence: The game was originally written in BASIC for the Commodore PET, but later ported to other early home computer platforms including the TRS-80 and Apple II.\n\n### Test Output:"}
{"id": "ont_6_computer_test_142", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Halls of the Things was ported to the Amstrad CPC amd Commodore 64.\n\n### Example Output: platform(Halls of the Things,Amstrad CPC)\n\n### Test Sentence: One side had the Atari version, and the other had the Commodore 64 version.\n\n### Test Output:"}
{"id": "ont_6_computer_test_143", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Activision Decathlon was ported to the Atari 8-bit family, Atari 5200, Commodore 64, ColecoVision, and MSX.\n\n### Example Output: platform(The Activision Decathlon,MSX)\n\n### Test Sentence: The Activision Decathlon was ported to the Atari 8-bit family, Atari 5200, Commodore 64, ColecoVision, and MSX.\n\n### Test Output:"}
{"id": "ont_6_computer_test_144", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: A generalization of Bell Labs' time-sharing operating system Unix, MERT featured a redesigned, modular kernel that was able to run Unix programs and privileged real-time computing processes.\n\n### Example Output: developer(Multi-Environment Real-Time,Bell Labs)\n\n### Test Sentence: Based on the General Motors Executive System for the IBM 701, UMES was revised to work on the mainframe computers in use at the University of Michigan during this time (IBM 704, 709, and 7090) and to work better for the small student jobs that were expected to be the primary work load at the University.\n\n### Test Output:"}
{"id": "ont_6_computer_test_145", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Bone Cruncher is a puzzle video game for the Acorn Electron, BBC Micro, and Commodore 64 first published by Superior Software in 1987.\n\n### Example Output: platform(Bonecruncher,Acorn Electron)\n\n### Test Sentence: Impossible Mission is a video game originally written for the Commodore 64 by Dennis Caswell and published by Epyx in 1984.\n\n### Test Output:"}
{"id": "ont_6_computer_test_146", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: NLTSS ran initially on a CDC 7600 computer, but only ran production from about 1985 until 1994 on Cray computers including the Cray-1, Cray X-MP, and Cray Y-MP models.\n\n### Example Output: platform(NLTSS,Cray X-MP)\n\n### Test Sentence: NLTSS ran initially on a CDC 7600 computer, but only ran production from about 1985 until 1994 on Cray computers including the Cray-1, Cray X-MP, and Cray Y-MP models.\n\n### Test Output:"}
{"id": "ont_6_computer_test_147", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Star Parodier ( SutÄ ParojÄ) is a vertical-scrolling shoot 'em up video game developed by Kaneko and published by Hudson Soft for the PC Engine CD-ROMÂ² in 1992.\n\n### Example Output: distribution_format(Star Parodier,CD-ROM)\n\n### Test Sentence: Towers II: Plight of the Stargazer is a first-person role-playing video game originally developed and published by JV Enterprises for the Atari Falcon in 1995.\n\n### Test Output:"}
{"id": "ont_6_computer_test_148", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Amiga 1000 combines the 16/32-bit Motorola 68000 CPU which was powerful by 1985 standards with one of the most advanced graphics and sound systems in its class, and runs a preemptive multitasking operating system that fits into 256 KB of read-only memory and shipped with 256Â KB of RAM.\n\n### Example Output: CPU(Amiga 1000,Motorola 68000)\n\n### Test Sentence: PDP-8 4K Disk Monitor System PS/8 (\"Programming System/8\"), requiring 8K.\n\n### Test Output:"}
{"id": "ont_6_computer_test_149", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Ballblazer was originally released for the Atari 8-bit family, then ported to the Atari 5200, Apple II, ZX Spectrum, Amstrad CPC, Commodore 64, MSX.\n\n### Example Output: platform(Ballblazer,Amstrad CPC)\n\n### Test Sentence: Transarctica (or Arctic Baron) is a 1993 computer game made by the French company Silmarils for the Amiga and ported to the PC, Atari ST, Macintosh and Atari Falcon.\n\n### Test Output:"}
{"id": "ont_6_computer_test_150", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Army Moves is a scrolling shooter game developed by Dinamic Software for the Amiga, Amstrad CPC, Atari ST, Commodore 64, MSX and ZX Spectrum.\n\n### Example Output: platform(Army Moves,MSX)\n\n### Test Sentence: Army Moves is a scrolling shooter game developed by Dinamic Software for the Amiga, Amstrad CPC, Atari ST, Commodore 64, MSX and ZX Spectrum.\n\n### Test Output:"}
{"id": "ont_6_computer_test_151", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Wings of Fury was released in 1989 for the X68000 and in 1990 for Amstrad CPC, Commodore 64, Amiga, and MS-DOS.\n\n### Example Output: platform(Wings of Fury,Commodore 64)\n\n### Test Sentence: Wings of Fury was released in 1989 for the X68000 and in 1990 for Amstrad CPC, Commodore 64, Amiga, and MS-DOS.\n\n### Test Output:"}
{"id": "ont_6_computer_test_152", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The game was released on the TRS-80 in 1982, then ported to the Apple II, Atari 8-bit family, and Commodore 64.\n\n### Example Output: platform(Dunzhin,Commodore 64)\n\n### Test Sentence: Ports for the Amiga and Atari ST were published in 1988.\n\n### Test Output:"}
{"id": "ont_6_computer_test_153", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: 007 : Licence to Kill was released for Amiga, Amstrad CPC, Atari ST, BBC Micro, Commodore 64, DOS, MSX and ZX Spectrum.\n\n### Example Output: platform(007: Licence to Kill,BBC Micro)\n\n### Test Sentence: 007 : Licence to Kill was released for Amiga, Amstrad CPC, Atari ST, BBC Micro, Commodore 64, DOS, MSX and ZX Spectrum.\n\n### Test Output:"}
{"id": "ont_6_computer_test_154", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: From 1985 to 1988, the game was released for the Apple II, Atari 7800, ZX Spectrum, Acorn Electron, BBC Micro, Amstrad CPC, and Master System.\n\n### Example Output: platform(Impossible Mission,Amstrad CPC)\n\n### Test Sentence: Later that year, a color version of the game was released for the Amiga and Atari ST, and in 1989 for the Nintendo Entertainment System.\n\n### Test Output:"}
{"id": "ont_6_computer_test_155", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: From 1985 to 1988, the game was released for the Apple II, Atari 7800, ZX Spectrum, Acorn Electron, BBC Micro, Amstrad CPC, and Master System.\n\n### Example Output: platform(Impossible Mission,Amstrad CPC)\n\n### Test Sentence: The game was released simultaneously for the Amiga, Amstrad CPC, Apple II, Atari 8-bit family, Atari ST, Commodore 64, MS-DOS, TRS-80, TI-99/4A, and Macintosh.\n\n### Test Output:"}
{"id": "ont_6_computer_test_156", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The game was released on the TRS-80 in 1982, then ported to the Apple II, Atari 8-bit family, and Commodore 64.\n\n### Example Output: platform(Dunzhin,Commodore 64)\n\n### Test Sentence: The game was written in BASIC for the Commodore PET and TRS-80 and ported to the Atari 8-bit family and Apple II.\n\n### Test Output:"}
{"id": "ont_6_computer_test_157", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: is a 1980s computer game originally programmed in machine code by Nick Pelling for the BBC Micro and Acorn Electron and published by Frak !'s own 'Aardvark' software label in 1984.\n\n### Example Output: platform(Frak!,Acorn Electron)\n\n### Test Sentence: To Preserve Quandic is a graphical adventure game written by David Karam for the TRS-80 Color Computer and published by Prickly Pear Software in 1984.\n\n### Test Output:"}
{"id": "ont_6_computer_test_158", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Halls of the Things was ported to the Amstrad CPC amd Commodore 64.\n\n### Example Output: platform(Halls of the Things,Amstrad CPC)\n\n### Test Sentence: Halls of the Things was ported to the Amstrad CPC amd Commodore 64.\n\n### Test Output:"}
{"id": "ont_6_computer_test_159", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Sherlock Holmes : Consulting Detective was originally developed by ICOM Simulations for the FM Towns computer and later ported to DOS, Apple Macintosh, Commodore CDTV, TurboGrafx-CD, Sega CD and Tandy Video Information System with all versions being distributed on CD-ROM.\n\n### Example Output: platform(Sherlock Holmes: Consulting Detective,Tandy Video Information System)\n\n### Test Sentence: Sherlock Holmes : Consulting Detective was originally developed by ICOM Simulations for the FM Towns computer and later ported to DOS, Apple Macintosh, Commodore CDTV, TurboGrafx-CD, Sega CD and Tandy Video Information System with all versions being distributed on CD-ROM.\n\n### Test Output:"}
{"id": "ont_6_computer_test_160", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The game was released on the TRS-80 in 1982, then ported to the Apple II, Atari 8-bit family, and Commodore 64.\n\n### Example Output: platform(Dunzhin,Commodore 64)\n\n### Test Sentence: and, in 1982, was converted to the Commodore MAX Machine and Commodore 64.\n\n### Test Output:"}
{"id": "ont_6_computer_test_161", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The game was released on the TRS-80 in 1982, then ported to the Apple II, Atari 8-bit family, and Commodore 64.\n\n### Example Output: platform(Dunzhin,Commodore 64)\n\n### Test Sentence: Telengard continued to develop DND at Purdue University as a hobby, rewrote the game for the Commodore PET 2001 after 1978, and ported it to Apple II+, TRS-80, and Atari 800 platforms before Avalon Hill found the game at a convention and licensed it for distribution.\n\n### Test Output:"}
{"id": "ont_6_computer_test_162", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: is a 1980s computer game originally programmed in machine code by Nick Pelling for the BBC Micro and Acorn Electron and published by Frak !'s own 'Aardvark' software label in 1984.\n\n### Example Output: platform(Frak!,Acorn Electron)\n\n### Test Sentence: A version for the Commodore PET by Don Dennis was released July 1979.\n\n### Test Output:"}
{"id": "ont_6_computer_test_163", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Home computer ports of Blasteroids were released by Image Works for the Amiga, Amstrad CPC, Atari ST, Commodore 64, MSX, MS-DOS, and ZX Spectrum.\n\n### Example Output: platform(Blasteroids,Atari ST)\n\n### Test Sentence: Home computer ports of Blasteroids were released by Image Works for the Amiga, Amstrad CPC, Atari ST, Commodore 64, MSX, MS-DOS, and ZX Spectrum.\n\n### Test Output:"}
{"id": "ont_6_computer_test_164", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The original Commodore 64 version was developed by Sensible Software and ported to other systems.\n\n### Example Output: platform(Microprose Soccer,Commodore 64)\n\n### Test Sentence: Delta 16 was originally released for the Commodore 16 home computer, then ported to Commodore 64 for which it was released free of charge.\n\n### Test Output:"}
{"id": "ont_6_computer_test_165", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: QDOS is the multitasking operating system found on the Sinclair QL personal computer and Sinclair QDOS's clones.\n\n### Example Output: platform(Sinclair QDOS,Sinclair QL)\n\n### Test Sentence: 68K/OS was a computer operating system developed by GST Computer Systems for the Sinclair QL microcomputer.\n\n### Test Output:"}
{"id": "ont_6_computer_test_166", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Barbarian: The Ultimate Warrior is a video game first released for Commodore 64 personal computers in 1987; the title was developed and published by Palace Software, and ported to other computers in the following months.\n\n### Example Output: platform(Barbarian: The Ultimate Warrior,Commodore 64)\n\n### Test Sentence: 19 Part One: Boot Camp is a multi-part action video game released by Cascade Games in 1988 for the Commodore 64 and ZX Spectrum.\n\n### Test Output:"}
{"id": "ont_6_computer_test_167", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Barbarian: The Ultimate Warrior is a video game first released for Commodore 64 personal computers in 1987; the title was developed and published by Palace Software, and ported to other computers in the following months.\n\n### Example Output: platform(Barbarian: The Ultimate Warrior,Commodore 64)\n\n### Test Sentence: Underwurlde is a 1984 action-adventure platform video game in the Sabreman series by Ultimate Play the Game for the ZX Spectrum and Commodore 64.\n\n### Test Output:"}
{"id": "ont_6_computer_test_168", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: is a 1980s computer game originally programmed in machine code by Nick Pelling for the BBC Micro and Acorn Electron and published by Frak !'s own 'Aardvark' software label in 1984.\n\n### Example Output: platform(Frak!,Acorn Electron)\n\n### Test Sentence: Commando Libya is a shoot 'em up for the Commodore 64, written by Robert Pfitzner, and self-published in 1986.\n\n### Test Output:"}
{"id": "ont_6_computer_test_169", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Yie Ar Kung-Fu II was released for the Commodore 64, MSX, Amstrad CPC, ZX Spectrum, BBC Micro and Acorn Electron home computer systems and featured a different approach to the game.\n\n### Example Output: platform(Yie Ar Kung-Fu II,Commodore 64)\n\n### Test Sentence: Yie Ar Kung-Fu II was released for the Commodore 64, MSX, Amstrad CPC, ZX Spectrum, BBC Micro and Acorn Electron home computer systems and featured a different approach to the game.\n\n### Test Output:"}
{"id": "ont_6_computer_test_170", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: HDOS is an early microcomputer operating system, originally written for the Heathkit H8 computer system and later also available for the Heathkit H89 and Zenith Z-89 computers.\n\n### Example Output: platform(HDOS,Heathkit H8)\n\n### Test Sentence: AMSDOS is a disk operating system for the 8-bit Amstrad CPC Computer (and various clones).\n\n### Test Output:"}
{"id": "ont_6_computer_test_171", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Significant changes over previous Nexus devices include an all-aluminum based body that is thinner and lighter than the Nexus 6, a rear fingerprint reader called Nexus Imprint, a faster octa-core Snapdragon 810 v2.1 system-on-chip (SoC), an AMOLED display, better cameras, enhanced LTE connectivity, a reversible USB-C dock connector, and the removal of wireless charging.\n\n### Example Output: CPU(Nexus 6P,Snapdragon 810)\n\n### Test Sentence: The Google Pixelbook (codenamed Eve during development) is a portable laptop/tablet hybrid computer developed by Google which runs Chrome OS.\n\n### Test Output:"}
{"id": "ont_6_computer_test_172", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: LUnix, short for \"Little Unix\", is a Unix-like multi-tasking operating system designed to run natively on the Commodore 64 and Commodore 128 home computer systems.\n\n### Example Output: platform(LUnix,Commodore 128)\n\n### Test Sentence: Banana Pi uses the Allwinner SoC (system on chip) and as such is mostly covered by the linux-sunxi port.\n\n### Test Output:"}
{"id": "ont_6_computer_test_173", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: At the time of introduction, these systems ran the IRIX 6.4, and later, the IRIX 6.5 operating systems.\n\n### Example Output: operating_system(SGI Origin 200,IRIX)\n\n### Test Sentence: Using MIPS CPUs and running IRIX, SGI Tezro is the immediate successor to the SGI Octane line.\n\n### Test Output:"}
{"id": "ont_6_computer_test_174", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Kiwix is a free and open-source offline web browser created by Emmanuel Engelhart and Renaud Gaudin in 2007.\n\n### Example Output: creator(Kiwix,Renaud Gaudin)\n\n### Test Sentence: In addition to a website, Google Drive offers apps with offline capabilities for Windows and macOS computers, and Android and iOS smartphones and tablets.\n\n### Test Output:"}
{"id": "ont_6_computer_test_175", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: In July 2012, Opera Software reported that Opera Mini had 168.8 million users as of March 2012.\n\n### Example Output: developer(Opera Mini,Opera Software)\n\n### Test Sentence: As of 2018, the service had an estimated 850 million users, up from 782 million users in 2016. iCloud enables users to store data such as documents, photos, and music on remote servers for download to iOS, macOS or Windows devices, to share and send data to other users, and to manage their Apple devices if lost or stolen.\n\n### Test Output:"}
{"id": "ont_6_computer_test_176", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: SUPER-UX is a version of the Unix operating system from NEC that is used on its SX series of supercomputers.\n\n### Example Output: developer(SUPER-UX,NEC)\n\n### Test Sentence: The latter are re-badged systems from BOXX Technologies, based on Intel Xeon or AMD Opteron processors and Nvidia Quadro graphics chipsets, running Red Hat Enterprise Linux, SUSE Linux Enterprise Server or Windows Compute Cluster Server.\n\n### Test Output:"}
{"id": "ont_6_computer_test_177", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: In July 2012, Opera Software reported that Opera Mini had 168.8 million users as of March 2012.\n\n### Example Output: developer(Opera Mini,Opera Software)\n\n### Test Sentence: While the Save the World and Creative versions have been successful for Epic Games, Fortnite Battle Royale in particular became a resounding success - drawing in more than 125 million players in less than a year, earning hundreds of millions of dollars per month, and becoming a cultural phenomenon.\n\n### Test Output:"}
{"id": "ont_6_computer_test_178", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Call of Duty : United Offensive was developed by Gray Matter Interactive, with contributions from Pi Studios, and published by Activision.\n\n### Example Output: developer(Call of Duty: United Offensive,Gray Matter Interactive)\n\n### Test Sentence: Successor id Tech 4 was derived from id Tech 3, as was Infinity Ward's IW engine used in Call of Duty 2 onwards.\n\n### Test Output:"}
{"id": "ont_6_computer_test_179", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Adobe Persuasion (formerly Aldus Persuasion) is a discontinued presentation program developed for the Macintosh platform by Aldus Corporation.\n\n### Example Output: developer(Adobe Persuasion,Aldus)\n\n### Test Sentence: Artists may produce Flash graphics and animations using Adobe Animate (formerly known as Adobe Flash Professional).\n\n### Test Output:"}
{"id": "ont_6_computer_test_180", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: StarOffice supported the OpenOffice.org XML file format, as well as the OpenDocument standard, and could generate PDF and Flash formats.\n\n### Example Output: derivative_work(StarOffice,OpenOffice.org)\n\n### Test Sentence: Ghostscript is a suite of software based on an interpreter for Adobe Systems' PostScript and Portable Document Format (PDF) page description languages.\n\n### Test Output:"}
{"id": "ont_6_computer_test_181", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: In 2010, when Oracle acquired Sun, Widenius forked the open-source MySQL project to create MariaDB.\n\n### Example Output: derivative_work(MySQL,MariaDB)\n\n### Test Sentence: Prior to Oracle's moving of core development \"behind closed doors\", a group of former OpenSolaris developers decided to fork the core software under the name OpenIndiana.\n\n### Test Output:"}
{"id": "ont_6_computer_test_182", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Heroes Chronicles is a series of turn-based strategy video games developed by Jon Van Caneghem through New World Computing and published by the 3DO Company.\n\n### Example Output: developer(Heroes Chronicles,New World Computing)\n\n### Test Sentence: Heroes Chronicles, a series of short introductory games based on the Heroes III engine, was also released.\n\n### Test Output:"}
{"id": "ont_6_computer_test_183", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: In 2010, when Oracle acquired Sun, Widenius forked the open-source MySQL project to create MariaDB.\n\n### Example Output: derivative_work(MySQL,MariaDB)\n\n### Test Sentence: The OpenIndiana project, a part of the illumos Foundation, aims to continue the development and distribution of the OpenSolaris codebase.\n\n### Test Output:"}
{"id": "ont_6_computer_test_184", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: A generalization of Bell Labs' time-sharing operating system Unix, MERT featured a redesigned, modular kernel that was able to run Unix programs and privileged real-time computing processes.\n\n### Example Output: developer(Multi-Environment Real-Time,Bell Labs)\n\n### Test Sentence: Examples include community-supported distributions like CentOS and Scientific Linux and commercial forks like Oracle Linux.\n\n### Test Output:"}
{"id": "ont_6_computer_test_185", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Dark Wizard, known in Japan as Dark Wizard: Yomigaerishi Yami no Madoushi ( ), is a role-playing video game developed and published by Sega for the Sega CD.\n\n### Example Output: distribution_format(Dark Wizard,Sega CD)\n\n### Test Sentence: Designed as a \"different kind of RPG\", Lunar: The Silver Star made use of the up-and-coming CD-ROM format by featuring high quality audio, full motion video, and voice acting to narrate a fantasy story set in a magical world.\n\n### Test Output:"}
{"id": "ont_6_computer_test_186", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Rui Calls Tomo) is a Japanese adult visual novel developed by Akatsuki Works and first released for Windows as a DVD on June 26, 2008 as a limited edition; the regular edition followed on July 31, 2008.\n\n### Example Output: distribution_format(Rui wa Tomo o Yobu,DVD)\n\n### Test Sentence: A demo of Ninety-Nine Nights was released on a DVD-ROM as a pre-order bonus in Japan, and on July 28, 2006, one was released on the Xbox Live Marketplace.\n\n### Test Output:"}
{"id": "ont_6_computer_test_187", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Wake of the Ravager was initially released in two boxed versions: on floppy disk and on CD-ROM, with the latter featuring digitised voice and music (as Red Book CD tracks).\n\n### Example Output: distribution_format(Dark Sun: Wake of the Ravager,floppy disk)\n\n### Test Sentence: The Amiga CD32 and Sega CD versions are reliant on CD-ROM media to store large levels, highly detailed graphics, and high-quality music.\n\n### Test Output:"}
{"id": "ont_6_computer_test_188", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Skyborg: Into the Vortex was a CD-ROM science fiction computer game released in 1995 by the trading card company SkyBox International, Inc. and created by American studio Fringe Multimedia.\n\n### Example Output: distribution_format(Skyborg: Into the Vortex,CD-ROM)\n\n### Test Sentence: Bad Day on the Midway is a CD-ROM game designed and scored by The Residents and a number of other graphic artists, including Jim Ludtke.\n\n### Test Output:"}
{"id": "ont_6_computer_test_189", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Last Bounty Hunter is a live-action laserdisc video game released by American Laser Games in 1994.\n\n### Example Output: distribution_format(The Last Bounty Hunter,LaserDisc)\n\n### Test Sentence: Fast Draw Showdown is a live-action laserdisc video game, released by American Laser Games in 1994 (see 1994 in video gaming) for a limited number of platforms.\n\n### Test Output:"}
{"id": "ont_6_computer_test_190", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The game was released in March 1990 for MS-DOS-based PCs and was available as either a 5.25-inch or 3.5-inch floppy disk.\n\n### Example Output: distribution_format(Chip 'n Dale Rescue Rangers: The Adventures in Nimnul's Castle,floppy disk)\n\n### Test Sentence: DOS CD-ROM version and Macintosh port were released in 1994.\n\n### Test Output:"}
{"id": "ont_6_computer_test_191", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Wake of the Ravager was initially released in two boxed versions: on floppy disk and on CD-ROM, with the latter featuring digitised voice and music (as Red Book CD tracks).\n\n### Example Output: distribution_format(Dark Sun: Wake of the Ravager,floppy disk)\n\n### Test Sentence: A boxed demonstration version of this game was also released on CD-ROM, entitled \"A Day in The Life of Down Under Dan\".\n\n### Test Output:"}
{"id": "ont_6_computer_test_192", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The game tied in with the DVD release of Scooby-Doo!\n\n### Example Output: distribution_format(Scooby-Doo! First Frights,DVD)\n\n### Test Sentence: The game was announced in December 2002, with The X-Files : Resist or Serve's release initially scheduled for the second quarter of 2003, to coincide with the DVD release of the seventh season.\n\n### Test Output:"}
{"id": "ont_6_computer_test_193", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Case of the Cautious Condor was one of the first CD-ROM-only games that was furthermore a complete new development for that media and not only a port of another version such as an already existing floppy disc game or a laserdisc arcade machine.\n\n### Example Output: distribution_format(The Case of the Cautious Condor,CD-ROM)\n\n### Test Sentence: The game was released under a traditional CD-ROM format, uncommon to the PS2.\n\n### Test Output:"}
{"id": "ont_6_computer_test_194", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Wake of the Ravager was initially released in two boxed versions: on floppy disk and on CD-ROM, with the latter featuring digitised voice and music (as Red Book CD tracks).\n\n### Example Output: distribution_format(Dark Sun: Wake of the Ravager,floppy disk)\n\n### Test Sentence: The game was initially released on CD-ROM and some time later on floppy disks; the CD-ROM version features full motion video, music and speech whereas the floppy disk version has MIDI music files and still images to replace the videos.\n\n### Test Output:"}
{"id": "ont_6_computer_test_195", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Root After and Another (styled as after and another) is a Japanese adult visual novel by Makura which was released on October 26, 2007 for Windows as a DVD in limited and regular first editions.\n\n### Example Output: distribution_format(Root After and Another,DVD)\n\n### Test Sentence: Sanarara was released on April 29, 2005 for Windows as a DVD.\n\n### Test Output:"}
{"id": "ont_6_computer_test_196", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Heroes Chronicles is a series of turn-based strategy video games developed by Jon Van Caneghem through New World Computing and published by the 3DO Company.\n\n### Example Output: developer(Heroes Chronicles,New World Computing)\n\n### Test Sentence: Command & Conquer: The First Decade is a compilation of the Command & Conquer series' games published from 1995 to 2003, bundled onto one DVD and updated to run optimally on Windows XP.\n\n### Test Output:"}
{"id": "ont_6_computer_test_197", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Dark Wizard, known in Japan as Dark Wizard: Yomigaerishi Yami no Madoushi ( ), is a role-playing video game developed and published by Sega for the Sega CD.\n\n### Example Output: distribution_format(Dark Wizard,Sega CD)\n\n### Test Sentence: Cosmic Fantasy 2, known in Japan as Cosmic Fantasy 2: Bouken Shounen Ban (2 ) is a role-playing video game developed and published by Nippon Telenet in Japan, and localized and published by Working Designs in North America, for the TurboGrafx-CD (PC Engine CD-ROMÂ²) video game console.\n\n### Test Output:"}
{"id": "ont_6_computer_test_198", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Audiogenic published versions of the original game for the Acorn Electron, BBC Micro, ZX Spectrum, Amstrad CPC, Commodore 64, Atari ST, Amiga, and IBM PC in 1990 and 1991.\n\n### Example Output: platform(Loopz,Amstrad CPC)\n\n### Test Sentence: During 1990 and 1991, the game was released in HuCard cartridge and CD-ROM formats for the U.S TurboGrafx-16 and Jack Nicklaus ' Greatest 18 Holes of Major Championship Golf's foreign counterpart, PC Engine.\n\n### Test Output:"}
{"id": "ont_6_computer_test_199", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Unlike Nippon Ichi's previous games, Disgaea 2 is on DVD-ROM and has an animated opening movie.\n\n### Example Output: distribution_format(Disgaea 2,DVD)\n\n### Test Sentence: This game is the first in the series to be released on DVD-ROM, and the first to have the English release censored.\n\n### Test Output:"}
{"id": "ont_6_computer_test_200", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: 007 : Licence to Kill was released for Amiga, Amstrad CPC, Atari ST, BBC Micro, Commodore 64, DOS, MSX and ZX Spectrum.\n\n### Example Output: platform(007: Licence to Kill,BBC Micro)\n\n### Test Sentence: Spycraft (also known by Spycraft : The Great Game's full title, Spycraft: The Great Game) is an adventure CD-ROM game published by Activision in 1996.\n\n### Test Output:"}
{"id": "ont_6_computer_test_201", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Star Parodier ( SutÄ ParojÄ) is a vertical-scrolling shoot 'em up video game developed by Kaneko and published by Hudson Soft for the PC Engine CD-ROMÂ² in 1992.\n\n### Example Output: distribution_format(Star Parodier,CD-ROM)\n\n### Test Sentence: Ginga Fukei Densetsu Sapphire (Japanese: ), commonly abbreviated to Sapphire in English, is a shoot 'em up developed by CAProduction for the PC Engine CD-ROM² System.\n\n### Test Output:"}
{"id": "ont_6_computer_test_202", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Case of the Cautious Condor was one of the first CD-ROM-only games that was furthermore a complete new development for that media and not only a port of another version such as an already existing floppy disc game or a laserdisc arcade machine.\n\n### Example Output: distribution_format(The Case of the Cautious Condor,CD-ROM)\n\n### Test Sentence: After delays and technical difficulties from experimenting on several platforms, Square moved production to the PlayStation, largely due to the advantages of the CD-ROM format.\n\n### Test Output:"}
{"id": "ont_6_computer_test_203", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Unlike Nippon Ichi's previous games, Disgaea 2 is on DVD-ROM and has an animated opening movie.\n\n### Example Output: distribution_format(Disgaea 2,DVD)\n\n### Test Sentence: In addition to the Wii game disc, NIS America included a DVD which contains official artwork and both animated and non-animated sprites.\n\n### Test Output:"}
{"id": "ont_6_computer_test_204", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Root After and Another (styled as after and another) is a Japanese adult visual novel by Makura which was released on October 26, 2007 for Windows as a DVD in limited and regular first editions.\n\n### Example Output: distribution_format(Root After and Another,DVD)\n\n### Test Sentence: The game was released in both CD-ROM and DVD formats on September 26, 2003.\n\n### Test Output:"}
{"id": "ont_6_computer_test_205", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Wake of the Ravager was initially released in two boxed versions: on floppy disk and on CD-ROM, with the latter featuring digitised voice and music (as Red Book CD tracks).\n\n### Example Output: distribution_format(Dark Sun: Wake of the Ravager,floppy disk)\n\n### Test Sentence: A companion volume of additional art and background plot material, Inside Out with Gadget, was also available, as well as a DVD entitled Gadget Trips/Mindscapes and an auxiliary CD-ROM containing videos, stills, previews and interactive 3D models under the title 'Preview and Reprise'.\n\n### Test Output:"}
{"id": "ont_6_computer_test_206", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Sherlock Holmes : Consulting Detective was originally developed by ICOM Simulations for the FM Towns computer and later ported to DOS, Apple Macintosh, Commodore CDTV, TurboGrafx-CD, Sega CD and Tandy Video Information System with all versions being distributed on CD-ROM.\n\n### Example Output: platform(Sherlock Holmes: Consulting Detective,Tandy Video Information System)\n\n### Test Sentence: Sherlock Holmes : Consulting Detective was originally developed by ICOM Simulations for the FM Towns computer and later ported to DOS, Apple Macintosh, Commodore CDTV, TurboGrafx-CD, Sega CD and Tandy Video Information System with all versions being distributed on CD-ROM.\n\n### Test Output:"}
{"id": "ont_6_computer_test_207", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Last Bounty Hunter is a live-action laserdisc video game released by American Laser Games in 1994.\n\n### Example Output: distribution_format(The Last Bounty Hunter,LaserDisc)\n\n### Test Sentence: Mad Dog McCree is the first live-action laserdisc video game released by American Laser Games.\n\n### Test Output:"}
{"id": "ont_6_computer_test_208", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Several other UNIX IRC clients, including  BitchX, EPIC, and ScrollZ, were originally forks of ircII.\n\n### Example Output: derivative_work(ircII,BitchX)\n\n### Test Sentence: Front ends were later developed for Objective-C, Objective-C++, Fortran, Java, Ada, and Go, among others.\n\n### Test Output:"}
{"id": "ont_6_computer_test_209", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Zork III was released for the Amstrad CPC, Apple II, Atari 8-bit family, Commodore 64, CP/M, IBM PC (as a self-booting disk), MSX, TRS-80, then later for Macintosh, Atari ST, and Amiga.\n\n### Example Output: platform(Zork III,Atari ST)\n\n### Test Sentence: Free Pascal supports its own Object Pascal dialect, as well as the dialects of several other Pascal family compilers to a certain extent, including those of Turbo Pascal, Delphi, and some historical Macintosh compilers.\n\n### Test Output:"}
{"id": "ont_6_computer_test_210", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: EyeWriter was conceived by Mick Ebeling and developed at Ebeling's home in Venice Beach by artists and engineers from the Free Art & Technology Lab, Graffiti Research Lab and OpenFrameworks teams, including Zachary Lieberman, Evan Roth, James Powderly, Theo Watson and Chris Sugrue.\n\n### Example Output: creator(EyeWriter,Theo Watson)\n\n### Test Sentence: JChemPaint was initiated by Christoph Steinbeck and is currently being developed as part of The Chemistry Development Kit (CDK), and a Standard Widget Toolkit (SWT) based JChemPaint application is being developed, as part of Bioclipse.\n\n### Test Output:"}
{"id": "ont_6_computer_test_211", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Indigenous Tweets was founded in March 2011 by Kevin Scannell, who does research in computational linguistics in the Department of Mathematics and Computer Science at Saint Louis University in St. Louis, Missouri, United States.\n\n### Example Output: creator(Indigenous Tweets,Kevin Scannell)\n\n### Test Sentence: STEEM is a cryptocurrency based on the social media and content-focused Steem blockchain, which was created on March 24, 2016 by Ned Scott and the blockchain developer Dan Larimer.\n\n### Test Output:"}
{"id": "ont_6_computer_test_212", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Columbus UNIX, or CB UNIX, is a discontinued variant of the UNIX operating system used internally at Bell Labs for administrative databases and transaction processing.\n\n### Example Output: developer(CB UNIX,Bell Labs)\n\n### Test Sentence: the use of a database system other than SQLite as the backend) as the reason the specification could not move forward to become a W3C Recommendation.\n\n### Test Output:"}
{"id": "ont_6_computer_test_213", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: After a controversial 2010 redesign and the departure of co-founders Jay Adelson and Kevin Rose, in July 2012 Digg was sold in three parts: the Digg brand, website and technology were sold to Betaworks for an estimated $500,000; 15 staff were transferred to The Washington Post's \"SocialCode\" for a reported $12 million; and a suite of patents was sold to LinkedIn for about $4 million.\n\n### Example Output: creator(Digg,Kevin Rose)\n\n### Test Sentence: Blockchain is used to register the deals.\n\n### Test Output:"}
{"id": "ont_6_computer_test_214", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Fortress of the Mutant Waffles is a game written for the Radio Shack TRS-80 Color Computer by Andrew Pakerski and published in 1983 by T+D Software.\n\n### Example Output: platform(Fortress of the Mutant Waffles,TRS-80 Color Computer)\n\n### Test Sentence: The computer simulation of the effects of nuclear detonations has been described both as \"stomach-churning\" (by Wellerstein himself) and as \"the most fun Ive had with Google Maps since well, possibly ever\" despite the admittedly abjectly grim nature of the subject.\n\n### Test Output:"}
{"id": "ont_6_computer_test_215", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Amiga 1000 combines the 16/32-bit Motorola 68000 CPU which was powerful by 1985 standards with one of the most advanced graphics and sound systems in its class, and runs a preemptive multitasking operating system that fits into 256 KB of read-only memory and shipped with 256Â KB of RAM.\n\n### Example Output: CPU(Amiga 1000,Motorola 68000)\n\n### Test Sentence: The machine is based on a Motorola 68030 main CPU, and had a Motorola 56000 digital signal processor, a feature which distinguished Atari Falcon from most other microcomputers of the era.\n\n### Test Output:"}
{"id": "ont_6_computer_test_216", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The PC-5000 was largely IBM PC-compatible, with the same 4.77-MHz Intel 8088 processor as the IBM PC, and ran MS-DOS 2.0 (in ROM).\n\n### Example Output: CPU(Sharp PC-5000,Intel 8088)\n\n### Test Sentence: The IBM Personal Computer AT, more commonly known as the IBM AT and also sometimes called the PC AT or PC/AT, was IBM's second-generation PC, designed around the 6 MHz Intel 80286 microprocessor and released in 1984 as System Unit 5170.\n\n### Test Output:"}
{"id": "ont_6_computer_test_217", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: CP/M, originally standing for Control Program/Monitor and later Control Program for Microcomputers, is a mass-market operating system created in 1974 for Intel 8080/85-based microcomputers by Gary Kildall of Digital Research, Inc.\n\n### Example Output: creator(CP/M,Gary Kildall)\n\n### Test Sentence: Also included is a Zilog Z80 CPU which allows the C128 to run CP/M, as an alternative to the usual Commodore BASIC environment.\n\n### Test Output:"}
{"id": "ont_6_computer_test_218", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: HDOS is an early microcomputer operating system, originally written for the Heathkit H8 computer system and later also available for the Heathkit H89 and Zenith Z-89 computers.\n\n### Example Output: platform(HDOS,Heathkit H8)\n\n### Test Sentence: The TI-99/4 and TI-99/4A are the first 16-bit home computers, using the Texas Instruments TMS9900 16-bit CPU.\n\n### Test Output:"}
{"id": "ont_6_computer_test_219", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The device features a quad-core 1.7 GHz Qualcomm Snapdragon 600 as Xiaomi Mi 2S's CPU.\n\n### Example Output: CPU(Xiaomi Mi 2S,Qualcomm Snapdragon)\n\n### Test Sentence: Droid Razr is powered by an OMAP 4430 SoC with dual 1.2Â GHz ARM Cortex-A9 processor cores.\n\n### Test Output:"}
{"id": "ont_6_computer_test_220", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The device features a quad-core 1.7 GHz Qualcomm Snapdragon 600 as Xiaomi Mi 2S's CPU.\n\n### Example Output: CPU(Xiaomi Mi 2S,Qualcomm Snapdragon)\n\n### Test Sentence: The device features a quad-core 1.5Â GHz Qualcomm Snapdragon S4 Pro as Xiaomi Mi 2's CPU.\n\n### Test Output:"}
{"id": "ont_6_computer_test_221", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The man or boy test was proposed by computer scientist Donald Knuth as a means of evaluating implementations of the ALGOL 60 programming language.\n\n### Example Output: creator(Man or boy test,Donald Knuth)\n\n### Test Sentence: ALGOL 60 (short for Algorithmic Language 1960) is a member of the ALGOL family of computer programming languages.\n\n### Test Output:"}
{"id": "ont_6_computer_test_222", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: AWK was created at Bell Labs in the 1970s, and its name is derived from the surnames of its authors: Alfred Aho, Peter Weinberger, and Brian Kernighan.\n\n### Example Output: named_after(AWK,Brian Kernighan)\n\n### Test Sentence: AWK was created at Bell Labs in the 1970s, and its name is derived from the surnames of its authors: Alfred Aho, Peter Weinberger, and Brian Kernighan.\n\n### Test Output:"}
{"id": "ont_6_computer_test_223", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: A generalization of Bell Labs' time-sharing operating system Unix, MERT featured a redesigned, modular kernel that was able to run Unix programs and privileged real-time computing processes.\n\n### Example Output: developer(Multi-Environment Real-Time,Bell Labs)\n\n### Test Sentence: The Thompson shell is the first Unix shell, introduced in the first version of Unix in 1971, and was written by Ken Thompson.\n\n### Test Output:"}
{"id": "ont_6_computer_test_224", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Originating on the TRS-80 and Commodore PET, Temple of Apshai was followed by several updated versions for other computers between 1980 and 1986.\n\n### Example Output: platform(Temple of Apshai,Commodore PET)\n\n### Test Sentence: The Tamagotchi (, IPA:Â [tamaotti]) is a handheld digital pet that was created in Japan by Akihiro Yokoi of WiZ and Aki Maita of Bandai.\n\n### Test Output:"}
{"id": "ont_6_computer_test_225", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: QRpedia was conceived by Roger Bamkin, a Wikipedia volunteer, coded by Terence Eden, and unveiled in April 2011.\n\n### Example Output: creator(QRpedia,Terence Eden)\n\n### Test Sentence: RadioGatún is a cryptographic hash primitive created by Guido Bertoni, Joan Daemen, Michaël Peeters, and Gilles Van Assche.\n\n### Test Output:"}
{"id": "ont_6_computer_test_226", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The initial design of the British bombe was produced in 1939 at the UK Government Code and Cypher School (GC&CS) at Bletchley Park by Alan Turing, with an important refinement devised in 1940 by Gordon Welchman.\n\n### Example Output: discoverer_or_inventor(Bombe,Alan Turing)\n\n### Test Sentence: SHA-1 was designed by the United States National Security Agency, and is a U.S. Federal Information Processing Standard.\n\n### Test Output:"}
{"id": "ont_6_computer_test_227", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: Columbus UNIX, or CB UNIX, is a discontinued variant of the UNIX operating system used internally at Bell Labs for administrative databases and transaction processing.\n\n### Example Output: developer(CB UNIX,Bell Labs)\n\n### Test Sentence: Some of the code still resides on Tim Berners-Lee's NeXT Computer in the CERN museum and has not been recovered due to the computer's status as a historical artifact.\n\n### Test Output:"}
{"id": "ont_6_computer_test_228", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: The Manchester Baby, also called the Small-Scale Experimental Machine (SSEM), was the first electronic stored-program computer, and built at the University of Manchester, UK, by Frederic C. Williams, Tom Kilburn, and Geoff Tootill, and ran its first program on 21 June 1948.\n\n### Example Output: discoverer_or_inventor(Manchester Baby,Tom Kilburn)\n\n### Test Sentence: The Manchester Baby, also called the Small-Scale Experimental Machine (SSEM), was the first electronic stored-program computer, and built at the University of Manchester, UK, by Frederic C. Williams, Tom Kilburn, and Geoff Tootill, and ran its first program on 21 June 1948.\n\n### Test Output:"}
{"id": "ont_6_computer_test_229", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: QRpedia was conceived by Roger Bamkin, a Wikipedia volunteer, coded by Terence Eden, and unveiled in April 2011.\n\n### Example Output: creator(QRpedia,Terence Eden)\n\n### Test Sentence: RadioGatún is a cryptographic hash primitive created by Guido Bertoni, Joan Daemen, Michaël Peeters, and Gilles Van Assche.\n\n### Test Output:"}
{"id": "ont_6_computer_test_230", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: computer, software, computer hardware, programming language, database, computer network, web application, computer science, algorithm, application, person, human, computer model, software engineer, operating system,\nOntology Relations: developer(software,), creator(application,human), platform(software,computer), operating_system(computer model,operating system)\n\n### Example Sentence: MUSIC/SP (Multi-User System for Interactive Computing/System Product; originally \"McGill University System for Interactive Computing\") was developed at McGill University in the 1970s from an early IBM time-sharing system called RAX (Remote Access Computing System).\n\n### Example Output: developer(MUSIC/SP,McGill University)\n\n### Test Sentence: The CAB500 was a French transistor-based drum computer, designed at SEA around 1957 by Alice Recoque.\n\n### Test Output:"}
