{"id": "ont_2_musicalwork_test_1", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Turn Me On album by Honeymoon Killers, who also happens to be its producer has a runtime of 35.1 minutes. It was preceded by the album Let It Breed.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\nprecededBy(Turn Me On (album), Let It Breed)\nruntime(Turn Me On (album), 35.1)\n\n### Test Sentence: Imagine is a song that Train followed Mermaid with, which was a song produced by the production team Espionage, and was on their album California 37.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_2", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The Train song Mermaid, which is an example of the reggae genre, was released under the record labels of Columbia Records and Sony Music Entertainment. It was written by Espen Lind and Amund Bjørklund and has a total runtime of 3 minutes and 16 seconds.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_3", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The band Nord is a sludge metal band that releases post-metal. They have an album called the Year of No light that was released on June 9th 2006, and was under Crucial Blast Label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_4", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The Year of No Light album Live at Roadburn 2008 was followed by their album Nord.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_5", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: Train's hit Mermaid was put out by the Sony Music Entertainment record label, was written by Amund Bjørklund with the producer Stargate. Train followed Mermaid with Imagine, a song by John Lennon where Mermaid was produced by the Espionage production team.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_6", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Year of No Light produced an album called Nord on 6/9/2006 which is 58.41 minutes long. They came out with the Demo 2004 album first, followed by Nord, and then the album Live at Roadburn in 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_7", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Year of No Light is a band whose members include a former guitarist for Monarch has created an album called Nord.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_8", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The sludge metal and post metal album Nord was produced and created by the artist Year of No Light and was released by the record label Crucial blast on 06-09-2006. It was followed by the album Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_9", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: Train followed Mermaid with Imagine is a song by musical artist John Lennon, which has a FIMI certification. It was produced by the production team Espionage.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_10", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Turn Me On album by Honeymoon Killers, who also happens to be its producer has a runtime of 35.1 minutes. It was preceded by the album Let It Breed.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\nprecededBy(Turn Me On (album), Let It Breed)\nruntime(Turn Me On (album), 35.1)\n\n### Test Sentence: The train song Mermaid, released on Dec. 27th, 2012 and written by Amund Bjorklund and Espen Lind, was preceded by the song This'll Be My Year. Mermaid lasts 3.16 minutes.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_11", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Released on 2006-09-06, the Nord album was part of the post-metal genre of sludge metal. The Year of No Light produced the album and followed it up with Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_12", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Year of No Light self-produced their sludge-metal album Nord, and released it on September 6th, 2006. The band's next album was Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_13", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Year of No Light is both the artist and the producer of the album Nord. The album was released on the label Crucial Blast. Year of No Light's next album was Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_14", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Noise music is an origin of noise rock.\n\n### Example Output:\nstylisticOrigin(Noise rock, Noise music)\n\n### Test Sentence: A stylistic origin of pop rock is rock music.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_15", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Nord is an album by Year Of No Light that falls under the genres of sludge metal and post-metal. It was released in September 6th, 2006. The next album Year Of No Light released was Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_16", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The genre of Turn Me On is punk blues.\n\n### Example Output:\ngenre(Turn Me On (album), Punk blues)\n\n### Test Sentence: The song Mermaid by Train is written in the reggae music genre which has its stylistic origin in the rhythm and blues genre.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_17", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The parent company of Polydor Records is Universal Music Group.\n\n### Example Output:\nparentCompany(Polydor Records, Universal Music Group)\n\n### Test Sentence: The key person at Universal Music Group is Lucian Grainge.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_18", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Noise music is an origin of noise rock.\n\n### Example Output:\nstylisticOrigin(Noise rock, Noise music)\n\n### Test Sentence: The genre of the Honeymoon Killers is noise rock.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_19", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Noise pop is a fusion genre, having elements from noise rock, which is the genre of the album Turn Me On, among other things.\n\n### Example Output:\ngenre(Turn Me On (album), Noise rock)\nmusicFusionGenre(Noise rock, Noise pop)\n\n### Test Sentence: While pop rock can trace its stylistic roots back to rock music, Reggae music evolved out of different musical genre, known as ska. Interestingly, the Train song, Mermaid, belongs to the genre of pop rock, but is also considered to be of the reggae genre as well.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_20", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The Year of No Light's sludge metal album Nord (2006-09-06) was followed by Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_21", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Noise pop is a fusion genre, having elements from noise rock, among other things.\n\n### Example Output:\nmusicFusionGenre(Noise rock, Noise pop)\n\n### Test Sentence: Baroque pop is a fusion genre which includes some elements of pop rock, an example of which is the Train song by Mermaid .\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_22", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Expect a Miracle is an instrumental song recorded by Brian Kelly. This easy listening song has a runtime of 54:56 and was followed by Afterplay, also by Brian Kelly.\n\n### Example Output:\nartist(Expect a Miracle, Brian Kelly (composer & pianist))\nruntime(Expect a Miracle, 54.56)\ngenre(Expect a Miracle, Instrumental music)\nfollowedBy(Expect a Miracle, Afterplay (Brian Kelly album))\ngenre(Expect a Miracle, Easy listening)\n\n### Test Sentence: Stargate produced the song Mermaid.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_23", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Expect a Miracle, an instrumental music genre album with a runtime of 54:56, was preceded by Pools of Light by Brian Kelly and then followed by the album Afterplay.\n\n### Example Output:\nruntime(Expect a Miracle, 54.56)\nprecededBy(Expect a Miracle, Pools of Light (Brian Kelly album))\ngenre(Expect a Miracle, Instrumental music)\nfollowedBy(Expect a Miracle, Afterplay (Brian Kelly album))\n\n### Test Sentence: The Train song Mermaid was made next to the song This'll be my year. It has a length of 3 minutes and 16 seconds and it is written in the reggae music field. Its followed by the John Lennon song called Imagine.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_24", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The song by Train called Mermaid is on the Sony Music Entertainment record label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_25", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Post-hardcore is a derivative of noise rock.\n\n### Example Output:\nderivative(Noise rock, Post-hardcore)\n\n### Test Sentence: Post-metal music includes synthesizers among the instruments it uses.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_26", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On is by the American band The Honeymoon Killers.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\n\n### Test Sentence: The pop rock song Mermaid by the band Train was released under the record label Columbia Records.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_27", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Take It Off! is preceded by the album Turn Me On.\n\n### Example Output:\nprecededBy(Take It Off!, Turn Me On (album))\n\n### Test Sentence: The Train song Mermaid is followed by the John Lennon song Imagine.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_28", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: The song Mermaid, written by the pop-rock band Train, lasts 3.16 minutes. Columbia Records released the song on December 27, 2012.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_29", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded through Polydor Records, released by the record label Universal Music Group, and preceded by the Velvet Underground album Squeeze.\n\n### Example Output:\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded in London by Polydor Records and released by Universal Music Group located in Santa Monica, California.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_30", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The album Nord by the Year of No Light whose record label is Crucial Blast was released on E-Vinyl record label on September 6, 2006 with a runtime of 58 minutes and 41 seconds.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_31", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The Year of No Light album Nord's record label is E-Vinyl.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_32", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Bootleg Series Volume 1: The Quine Tapes was recorded under the Universal Music Group record label.\n\n### Example Output:\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes was released by Universal Music Group, a record label run by key person Lucian Grainge. Polydor Records recorded Bootleg Series Volume 1: The Quine Tapes.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_33", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume I: The Quine Tapes was created by The Velvet Underground and is 230.05 minutes long.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes, which has a runtime of 230.05 minutes, was produced by The Velvet Underground.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_34", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: Columbia Records released Train's song titled, Mermaid, not the Warner Music Group, the groups record label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_35", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Turn Me On by Honeymoon Killers, a noise rock and punk blues genre, has a runtime of 35.1 minutes. Its producers are Honeymoon Killers themselves and Wharton Tiers.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\nproducer(Turn Me On (album), Wharton Tiers)\n\n### Test Sentence: The band Train followed up \"This'll be my year\" with a 3 minutes, 16 seconds long pop rock song, entitled \"Mermaid.\" Mermaid, which is also considered an example of the reggae genre of music, was written by songwriter, Espen Lind and released on December, 27, 2012.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_36", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The parent company of Polydor Records is Universal Music Group.\n\n### Example Output:\nparentCompany(Polydor Records, Universal Music Group)\n\n### Test Sentence: Mermaid,performed by Train, is on the Sony Music Entertainment label;however,John Lennon also released Imagine which was followed by Happy Xmas (War is Over) on the same record label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_37", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded in St. Louis, Missouri, and San Francisco, where Ed Lee is the political leader.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nleader(San Francisco, Ed Lee (politician))\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, San Francisco)\n\n### Test Sentence: The Bootleg Series Volume I: The Quine Tapes was recorded in San Francisco in the United States which has a total area of around 9.8 million square kilometers. In San Francisco the Coordinated Universal Time (UTC) offset is -7.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_38", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The album Nord by Year of No Light is sludge metal and post metal genre. Southern sludge and Stoner sludge are subgenres of sludge metal.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_39", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: The Train song Mermaid, a pop rock genre, on Columbia Records and Sony Music Entertainment record label has a total runtime of three minutes and sixteen seconds.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_40", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Wharton Tiers, born on January the 1st, 1953, is producing the album Turn Me On with the Honeymoon Killers.\n\n### Example Output:\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\nbirthDate(Wharton Tiers, 1953-01-01)\nproducer(Turn Me On (album), Wharton Tiers)\n\n### Test Sentence: The Train song Mermaid was released on the date 2012-12-27.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_41", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Brian Kelly album Afterplay was preceded by Pools of Light and then Expect a Miracle.\n\n### Example Output:\nprecededBy(Expect a Miracle, Pools of Light (Brian Kelly album))\nfollowedBy(Expect a Miracle, Afterplay (Brian Kelly album))\n\n### Test Sentence: The Train song Mermaid (Columbia Records/Sony Music Entertainment) was followed by the release of John Lennon song Imagine and Happy Xmas (War is Over).\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_42", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The reggae music genre song Mermaid by Train was written by Espen Lind and preceded by the song This'll be my year. The song Mermaid was released on 2012-12-27.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_43", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The band Train’s hit song Mermaid was released under the record label Columbia Records and also Sony Music Entertainment which is owned by the Sony Corporation.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_44", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Year of No Light by the band Nord, was released by Crucial Blast and is available on E-Vinyl.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_45", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded through Polydor Records, released by the record label Universal Music Group, and preceded by the Velvet Underground album Squeeze.\n\n### Example Output:\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\n\n### Test Sentence: The rock album Bootleg Series Volume 1: The Quine Tapes was released by Polydor Records and was preceded by the album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_46", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded through Polydor Records, released by the record label Universal Music Group, and preceded by the Velvet Underground album Squeeze.\n\n### Example Output:\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\n\n### Test Sentence: The Bootleg Series Volume 1: The Quine Tapes was recorded under the Universal Music Group record label in San Francisco and released by the record label Polydor Records. It was preceded by the album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_47", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded in St. Louis, Missouri, and San Francisco, where Ed Lee is the political leader.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nleader(San Francisco, Ed Lee (politician))\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, San Francisco)\n\n### Test Sentence: One of San Francisco's leaders is politician Ed Lee.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_48", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: The song Mermaid by Train, produced by the Espionage production team under Columbia Records and Sony Music Entertainment, is an example of the reggae genre and is 3 minutes and 16 seconds long. It the song after Imagine sung by John Lennon.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_49", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The Train song Mermaid from the album California 37 was written by Pat Monahan and Train and Espionage was its production team. The song was distributed digitally and was followed by the John Lennon song Imagine.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_50", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The sludge and post-metal album Nord by Year of No Light was released September 6, 2006 after the album Demo (2004). It comprises of 58 minutes and 41 seconds of sound.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_51", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground album Squeeze is in the genre of rock music.\n\n### Example Output:\ngenre(Squeeze (The Velvet Underground album), Rock music)\n\n### Test Sentence: The song Mermaid is by the musical band Train.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_52", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Year of No Light followed their album Nord, which was released on 06-09-2006, with the album Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_53", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded in St. Louis, Missouri, and San Francisco, where Ed Lee is the political leader.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nleader(San Francisco, Ed Lee (politician))\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, San Francisco)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes, which was recorded in San Francisco, was preceded by the album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_54", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes's genre is rock.\n\n### Example Output:\ngenre(Bootleg Series Volume 1: The Quine Tapes, Rock music)\n\n### Test Sentence: Bootleg Series Volume I: The Quine Tapes's genre is rock, of which proto-punk is a musical subgenre.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_55", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The genre of the Velvet Underground is proto-punk.\n\n### Example Output:\ngenre(The Velvet Underground, Proto-punk)\n\n### Test Sentence: Proto-punk is a music subgenre of rock music.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_56", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume I: The Quine Tapes was created by The Velvet Underground and is 230.05 minutes long.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes album with a run time of 230.05 minutes in the genre of Rock music was produced by Velvet Underground and released by the record label Polydor Records, preceded by album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_57", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Turn Me On album by Honeymoon Killers, who also happens to be its producer has a runtime of 35.1 minutes. It was preceded by the album Let It Breed.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\nprecededBy(Turn Me On (album), Let It Breed)\nruntime(Turn Me On (album), 35.1)\n\n### Test Sentence: Produced by the Espionage production team and now available in digital format, Mermaid is a reggae inspired song on Train's \"California 37\" album. Train followed up Mermaid with the John Lennon song Imagine.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_58", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Take It Off! is preceded by the album Turn Me On.\n\n### Example Output:\nprecededBy(Take It Off!, Turn Me On (album))\n\n### Test Sentence: The Train song Mermaid was preceded by the song This'll be my year.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_59", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: After releasing their album Squeeze, music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes, which they recorded in St Louis Missouri, USA The album was released on 2001-10-16 under the Polydor and Universal Music Group record labels and has a total run time of 230:05 minutes.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\nreleaseDate(Bootleg Series Volume 1: The Quine Tapes, 2001-10-16)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: Recorded in San Francisco and released October 16, 2001, Bootleg Series Volume 1: The Quine Tapes is 230.05 minutes long. It was preceded by the Velvet Underground album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_60", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded through Polydor Records, released by the record label Universal Music Group, and preceded by the Velvet Underground album Squeeze.\n\n### Example Output:\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\n\n### Test Sentence: The compilation album Andy Warhol's Velvet Underground Featuring Nico was followed by The Velvet Underground album Squeeze, which was followed by The Bootleg Series Volume 1: The Quine Tapes, recorded through Polydor Records in London.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_61", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground, produced their album Bootleg Series Volume 1: The Quine Tapes.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\n\n### Test Sentence: The rock album \"Bootleg Series Volume 1: The Quine Tapes\" was produced by proto-punk band The Velvet Underground.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_62", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The Year of No Light band released the sludge metal, post-metal album Nord on September 6, 2006 after its album Demo in 2004. The album is 58 minutes and 41 seconds long.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_63", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The album entitled Nord, followed by Year of No Light's album Live at Roadburn 2008, was released by the artist Year of No Light on the Crucial Blast label on the date 2006-09-06 and produced by Year of No Light.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_64", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Year of No Light produced the album Nord, which was released on June 9th, 2006. Nord falls into the sludge metal genre. Year of No Light's next album was Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_65", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The record labels of the Year of No Light album Nord's in post-metal genre are Crucial Blast and E-Vinyl.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_66", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground album Squeeze is in the genre of rock music.\n\n### Example Output:\ngenre(Squeeze (The Velvet Underground album), Rock music)\n\n### Test Sentence: \"Imagine\" is a song by musical artist, John Lennon.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_67", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded in St. Louis, Missouri, and San Francisco, where Ed Lee is the political leader.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nleader(San Francisco, Ed Lee (politician))\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, San Francisco)\n\n### Test Sentence: San Francisco is in the timezone UTC-7.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_68", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: After releasing their album Squeeze, music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes, which they recorded in St Louis Missouri, USA The album was released on 2001-10-16 under the Polydor and Universal Music Group record labels and has a total run time of 230:05 minutes.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\nreleaseDate(Bootleg Series Volume 1: The Quine Tapes, 2001-10-16)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: Released on October 16, 2001, The Bootleg Series Volume I: The Quine Tapes was recorded in St. Louis, Missouri, in the United States. The album, which follows the previous Velvet Underground release Squeeze, is 230:05 long.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_69", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Nord is an album by Year of No Light, released on September 6, 2006. It was followed by the album Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_70", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Turn Me On album by Honeymoon Killers, who also happens to be its producer has a runtime of 35.1 minutes. It was preceded by the album Let It Breed.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\nprecededBy(Turn Me On (album), Let It Breed)\nruntime(Turn Me On (album), 35.1)\n\n### Test Sentence: The Mermaid song by Train had a release date of the twenty seventh of December 2012 and it was preceded by the song this'll be My Year and it has total runtime of three minutes and sixteen seconds and the writer of the song Mermaid by the band train is Espen Lind.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_71", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: After releasing their album Squeeze, music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes, which they recorded in St Louis Missouri, USA The album was released on 2001-10-16 under the Polydor and Universal Music Group record labels and has a total run time of 230:05 minutes.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\nreleaseDate(Bootleg Series Volume 1: The Quine Tapes, 2001-10-16)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: Music group the Velvet Underground released their self-produced Rock music album Bootleg Series Volume 1: The Quine Tapes on 2001-10-16. The album has a total runtime of 230.05 minutes and was recorded in St. Louis Missouri, USA. It was preceded by the band’s album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_72", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Bootleg Series Volume I: The Quine Tapes, a rock music genre,with runtime of 230:05 was produced and released by Velvet Underground. It was recorded in the United States.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\ngenre(Bootleg Series Volume 1: The Quine Tapes, Rock music)\n\n### Test Sentence: The Velvet Underground had created the album Bootleg Series Volume 1: The Quine Tapes, which was produced by The Velvet Underground and recorded in the United States.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_73", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Nord, an album made by Year of No Light and released by the record label Crucial blast, belongs to the post metal genre.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_74", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground band drew occasional musical artists from an associated group called Theater of Eternal Music.\n\n### Example Output:\nassociatedBand/associatedMusicalArtist(The Velvet Underground, Theatre of Eternal Music)\n\n### Test Sentence: The Velvet Underground band, who produced Bootleg Series Volume I: The Quine Tapes, drew inspiration from the associated group called Theater of Eternal music.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_75", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Sludge metal has a variety called southern sludge.\n\n### Example Output:\nmusicSubgenre(Sludge metal, Southern sludge)\n\n### Test Sentence: The Year of No Light album Nord is in the sludge metal genre, one variety of which is southern sludge.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_76", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: After releasing their album Squeeze, music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes, which they recorded in St Louis Missouri, USA The album was released on 2001-10-16 under the Polydor and Universal Music Group record labels and has a total run time of 230:05 minutes.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\nreleaseDate(Bootleg Series Volume 1: The Quine Tapes, 2001-10-16)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: After releasing their album Squeeze, music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes, which they recorded in St Louis Missouri, USA. The album has a total length of 230:05 minutes.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_77", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On is by the American band The Honeymoon Killers.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\n\n### Test Sentence: The American band, the Honeymoon Killers, self-produced its album Turn Me On, with the help of some musicians from an associated musical group called Pussy Galore.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_78", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Expect a Miracle is an instrumental song recorded by Brian Kelly. This easy listening song has a runtime of 54:56 and was followed by Afterplay, also by Brian Kelly.\n\n### Example Output:\nartist(Expect a Miracle, Brian Kelly (composer & pianist))\nruntime(Expect a Miracle, 54.56)\ngenre(Expect a Miracle, Instrumental music)\nfollowedBy(Expect a Miracle, Afterplay (Brian Kelly album))\ngenre(Expect a Miracle, Easy listening)\n\n### Test Sentence: The Mermaid song is a reggae song by Train that is 3:16 long. It was written by Amund Bjorklund and produced by Stargate. The song is followed by “Imagine” by John Lennon.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_79", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The Train song Mermaid (a song on Train's \"California 37\" album) was written by Espen Lind and Amund Bjørklund.Train followed Mermaid with Imagine, a song by John Lennon but was produced by the Espionage production team in the digital format.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_80", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The parent company of Polydor Records is Universal Music Group.\n\n### Example Output:\nparentCompany(Polydor Records, Universal Music Group)\n\n### Test Sentence: Interscope Geffen A&M distributes the Polydor Records label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_81", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Year of No Light created the album Live at Roadburn 2008, which was preceded by band’s self-produced album Nord.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_82", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The Year of No Light album Nord is in the post-metal genre which uses synthesizer as an instrument and its also sludge metal genre which includes singing, among other things.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_83", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Bootleg Series Volume I: The Quine Tapes, produced by the Velvet Underground, was recorded in the United States and has a run time of 230:05.\n\n### Example Output:\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\n\n### Test Sentence: The Velvet Underground recorded the 230.05 minute long album Bootleg Series Volume 1: The Quine Tapes in the United States.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_84", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The album Turn Me On was produced by Wharton Tiers and was preceded by the album Let It Breed.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_85", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The genre of Turn Me On is punk blues.\n\n### Example Output:\ngenre(Turn Me On (album), Punk blues)\n\n### Test Sentence: Punk blues and noise rock are genre of the album Turn Me On.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_86", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Sludge metal has a variety called southern sludge.\n\n### Example Output:\nmusicSubgenre(Sludge metal, Southern sludge)\n\n### Test Sentence: Singing is typically present in sludge metal.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_87", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Sludge metal has a variety called southern sludge.\n\n### Example Output:\nmusicSubgenre(Sludge metal, Southern sludge)\n\n### Test Sentence: Stoner sludge is a subgenre of sludge metal.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_88", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The Train song Mermaid was written by Espen Lind and Stargate, Michael Jackson's production team who is associated with the musical artist Benny Blanco.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_89", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Take It Off! is preceded by the album Turn Me On.\n\n### Example Output:\nprecededBy(Take It Off!, Turn Me On (album))\n\n### Test Sentence: The song Mermaid by Train is written in the reggae music genre and was followed by the band’s cover of the John Lennon song Imagine. The original version of Imagine is in the pop music genre and was followed up by Lennon’s hit Happy Xmas (War is Over).\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_90", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn me on was created by the honeymoon killers. This song lasts 35.1 minutes and was preceded by the album Let it Breed. Wharton Tiers produced it .\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\nprecededBy(Turn Me On (album), Let It Breed)\nproducer(Turn Me On (album), Wharton Tiers)\n\n### Test Sentence: Mermaid is a song by Train released on the Columbia Records record label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_91", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn me on was created by the honeymoon killers. This song lasts 35.1 minutes and was preceded by the album Let it Breed. Wharton Tiers produced it .\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\nprecededBy(Turn Me On (album), Let It Breed)\nproducer(Turn Me On (album), Wharton Tiers)\n\n### Test Sentence: Mermaid is a song written by Train and it is distributed digitally.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_92", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground album Squeeze is in the genre of rock music.\n\n### Example Output:\ngenre(Squeeze (The Velvet Underground album), Rock music)\n\n### Test Sentence: The song Imagine by John Lennon was released on the album also named Imagine.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_93", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On is by the American band The Honeymoon Killers.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\n\n### Test Sentence: The Honeymoon Killers is the producer of the Turn Me On album.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_94", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground album Squeeze is in the genre of rock music.\n\n### Example Output:\ngenre(Squeeze (The Velvet Underground album), Rock music)\n\n### Test Sentence: The Train song Mermaid belongs to the genre of pop rock, which was followed by the release of Imagine by John Lennon was also followed by Happy Xmas (War Is Over).\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_95", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: Wharton Tiers produced the Turn Me On album, followed by the album Take It Off!\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_96", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Noise pop is a fusion genre, having elements from noise rock, among other things.\n\n### Example Output:\nmusicFusionGenre(Noise rock, Noise pop)\n\n### Test Sentence: Pop rock's subgenre is indie pop.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_97", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Nord is an album by Year of No Light in the sludge metal genre.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_98", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground album Squeeze is in the genre of rock music.\n\n### Example Output:\ngenre(Squeeze (The Velvet Underground album), Rock music)\n\n### Test Sentence: Pop rock is the genre of the band Train.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_99", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: The song Mermaid belongs to the musical band Train, has a length of 3 minutes and 16 seconds, and is an example of the reggae genre.. This'll be my year by Train was followed by Mermaid (and the song Imagine) but The Train song Mermaid has a length of 3 minutes and 16 seconds (produced by the Espionage production team).\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_100", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The drum kit is an instrument used in the punk blues genre.\n\n### Example Output:\ninstrument(Punk blues, Drum kit)\n\n### Test Sentence: Punk blues, which usually uses a drum kit, is the genre of the album Turn Me On.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_101", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground, produced their album Bootleg Series Volume 1: The Quine Tapes.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\n\n### Test Sentence: The Bootleg Series Volume I: The Quine Tapes is produced by The Velvet Underground.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_102", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Nord, an album in the post metal genre was released on 06-09-2006 by the artist Year of No Light.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_103", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Noise pop is a fusion genre, having elements from noise rock, which is the genre of the album Turn Me On, among other things.\n\n### Example Output:\ngenre(Turn Me On (album), Noise rock)\nmusicFusionGenre(Noise rock, Noise pop)\n\n### Test Sentence: The album Turn Me On is an example of the musical genre known as noise rock.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_104", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: The album Turn Me On with the run time of 35.1 minutes was self produced by the American band, the Honeymoon Killers and Wharton Tiers.The album Turn Me On was preceded by the album Let It Breed.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_105", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The Train song, Mermaid, was produced by the production team, Espionage, distributes digitally, and followed with a recording of Imagine by John Lennon.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_106", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The drum kit is an instrument used in the punk blues genre.\n\n### Example Output:\ninstrument(Punk blues, Drum kit)\n\n### Test Sentence: Reggae's stylistic origin is rhythm and blues.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_107", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: The Mermaid song by Train has a total runtime of three minutes and sixteen seconds.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_108", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Take It Off! is preceded by the album Turn Me On.\n\n### Example Output:\nprecededBy(Take It Off!, Turn Me On (album))\n\n### Test Sentence: Mermaid, written by the band Train, was followed by the released of their performance of the John Lennon song Imagine. Lennon's recording of the song was followed by Happy Xmas (War is Over).\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_109", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume I: The Quine Tapes was created by The Velvet Underground and is 230.05 minutes long.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes released on October 16, 2001 is 230.05 minutes long.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_110", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground album Squeeze is in the genre of rock music.\n\n### Example Output:\ngenre(Squeeze (The Velvet Underground album), Rock music)\n\n### Test Sentence: Mermaid is a pop rock song by Train released on the Columbia Records record label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_111", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Take It Off! is preceded by the album Turn Me On.\n\n### Example Output:\nprecededBy(Take It Off!, Turn Me On (album))\n\n### Test Sentence: Johnny Colt & Charlie Colin are former band members of Train, the band which sings the song Mermaid.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_112", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Altar of Plagues is a band associated with Year of No Light which produced the album Nord.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_113", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Post-hardcore is a derivative of noise rock.\n\n### Example Output:\nderivative(Noise rock, Post-hardcore)\n\n### Test Sentence: Hip hop music is a derivative of reggae.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_114", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Turn Me On is a punk blues and noise rock album that runs 35.1 minutes long. Turn It On was preceded by the album Let It Breed.\n\n### Example Output:\ngenre(Turn Me On (album), Punk blues)\ngenre(Turn Me On (album), Noise rock)\nprecededBy(Turn Me On (album), Let It Breed)\nruntime(Turn Me On (album), 35.1)\n\n### Test Sentence: The punk blues album Turn Me On is a noise rock genre and has a run time of 35 minutes 10 seconds. Its producer is Wharton Tiers.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_115", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Expect a Miracle by Brian Kelly, an album of the easy listening genre, was preceded by the album Pools of Light.\n\n### Example Output:\ngenre(Expect a Miracle, Easy listening)\nprecededBy(Expect a Miracle, Pools of Light (Brian Kelly album))\n\n### Test Sentence: The release of the song Imagine by John Lennon was followed by the release of the song Happy Xmas (War Is Over).\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_116", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: Turn Me On is a self-produced album by the Honeymoon Killers that falls under the genres of punk blues and noise rock.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_117", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: After releasing their album Squeeze, music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes, which they recorded in St Louis Missouri, USA The album was released on 2001-10-16 under the Polydor and Universal Music Group record labels and has a total run time of 230:05 minutes.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\nreleaseDate(Bootleg Series Volume 1: The Quine Tapes, 2001-10-16)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: The Bootleg Series Volume 1: The Quine Tapes by Velvet Underground, a rock music genre, was released on October, 16, 2001 by Universal Music Group and Polydor Records.The Quine Tapes was preceded by Squeeze by The Velvet Underground.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_118", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded in St Louis, Missouri, in the United States, in English, the primary language of the country.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nlanguage(United States, English language)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\n\n### Test Sentence: The location that the Bootleg Series Volume 1: The Quine Tapes was recorded in was St. Louis Missouri.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_119", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded in St. Louis, Missouri, and San Francisco, where Ed Lee is the political leader.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nleader(San Francisco, Ed Lee (politician))\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, San Francisco)\n\n### Test Sentence: The location that the Bootleg Series Volume 1: The Quine Tapes was recorded in was St. Louis, Missouri, and San Francisco, which is in the Pacific Time Zone.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_120", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The band Train were signed to the record label Warner Music Group.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_121", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground album Squeeze is in the genre of rock music.\n\n### Example Output:\ngenre(Squeeze (The Velvet Underground album), Rock music)\n\n### Test Sentence: The John Lennon song Imagine is in the genre of pop music.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_122", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes under the Polydor Records record label. The album was recorded in St. Louis, Missouri, USA and has a run time of 230:05.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\ngenre(Bootleg Series Volume 1: The Quine Tapes, Rock music)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\n\n### Test Sentence: The album Bootleg Series Volume 1: The Quine Tapes was released and produced by the Velvet Underground. The album was recorded in St. Louis, Missouri, United States and has a run time of 230:05.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_123", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On is by the American band The Honeymoon Killers.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\n\n### Test Sentence: The album Turn Me On is by the American band which is produced by The Honeymoon Killers which is a punk blues album.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_124", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground album Squeeze is in the genre of rock music.\n\n### Example Output:\ngenre(Squeeze (The Velvet Underground album), Rock music)\n\n### Test Sentence: The song Mermaid belongs to the musical band Train written in the reggae music genre where Pop rock is the genre.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_125", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On (produced by American band the Honeymoon Killers) is 35 minutes 10 seconds long.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\n\n### Test Sentence: The total length of the Turn Me On album is 35 minutes 10 seconds.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_126", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The Year of No Light album Nord was released on the date 2006-09-06 which runs 58.41 minutes, whose record is labelled by E-Vinyl. It was preceded by Year of No Light's album Demo 2004.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_127", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Expect a Miracle is an instrumental song recorded by Brian Kelly. This easy listening song has a runtime of 54:56 and was followed by Afterplay, also by Brian Kelly.\n\n### Example Output:\nartist(Expect a Miracle, Brian Kelly (composer & pianist))\nruntime(Expect a Miracle, 54.56)\ngenre(Expect a Miracle, Instrumental music)\nfollowedBy(Expect a Miracle, Afterplay (Brian Kelly album))\ngenre(Expect a Miracle, Easy listening)\n\n### Test Sentence: The song Imagine by John Lennon earned the FIMI certification.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_128", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground album Squeeze is in the genre of rock music.\n\n### Example Output:\ngenre(Squeeze (The Velvet Underground album), Rock music)\n\n### Test Sentence: Lou Reed is a former band member of the Velvet Underground.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_129", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The Year of No Light album Live at Roadburn 2008 was preceded by the album Nord (produced by Year of No Light ) and followed by the album Karysun / Year of No Light. It was produced by Roadburn Festival.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_130", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Brian Kelly recorded an instrumental music piece called Expect a Miracle.\n\n### Example Output:\nartist(Expect a Miracle, Brian Kelly (composer & pianist))\ngenre(Expect a Miracle, Instrumental music)\n\n### Test Sentence: The Train song Mermaid was written by Amund Bjorklund.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_131", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The American band, the Honeymoon Killers, self-produced its album called Turn Me On followed by the Take it Off album where The extended play song, 'Til Death Do Us Part came after Take It Off!\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_132", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Take It Off! is preceded by the album Turn Me On.\n\n### Example Output:\nprecededBy(Take It Off!, Turn Me On (album))\n\n### Test Sentence: The Train song “Mermaid”, which is an example of the reggae genre, was followed by the band’s cover of “Imagine” by John Lennon.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_133", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The 58.41 minute Year of No Light album Nord was preceded by Demo 2004.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_134", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The release date of Nord, Year of No Light Album, is 06-09-2006.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_135", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: Mermaid is a song by Train which has been released on both the Columbia Records and Sony Music Entertainment record labels.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_136", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The Train song Mermaid, of the reggae genre, written by Espen Lind and Amund Bjørklund with runtime of 3 minutes and 16 seconds was produced by the Espionage production team. It was followed with Imagine, a song by John Lennon.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_137", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On is by the American band The Honeymoon Killers.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\n\n### Test Sentence: The song Mermaid is off the album California 37 by the band Train.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_138", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Noise pop is a fusion genre, having elements from noise rock, among other things.\n\n### Example Output:\nmusicFusionGenre(Noise rock, Noise pop)\n\n### Test Sentence: Noise rock is a fusion genre of rock music.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_139", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Year of No Light followed their album Nord with the album Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_140", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground, produced their album Bootleg Series Volume 1: The Quine Tapes.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes was created by The Velvet Underground, a proto-punk band.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_141", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The genre of Turn Me On is punk blues.\n\n### Example Output:\ngenre(Turn Me On (album), Punk blues)\n\n### Test Sentence: The album Turn Me On is punk blues, a genre which originated from the earlier garage rock sound.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_142", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: After releasing their album Squeeze, music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes, which they recorded in St Louis Missouri, USA The album was released on 2001-10-16 under the Polydor and Universal Music Group record labels and has a total run time of 230:05 minutes.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\nreleaseDate(Bootleg Series Volume 1: The Quine Tapes, 2001-10-16)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes by The Velvet Underground was released on October 16, 2001. It was preceded by the album Squeeze, which itself was preceded by the compilation album Andy Warhol's Velvet Underground Featuring Nico.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_143", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Take It Off! is preceded by the album Turn Me On.\n\n### Example Output:\nprecededBy(Take It Off!, Turn Me On (album))\n\n### Test Sentence: John Lennon wrote the song Imagine, and then wrote Power to the People.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_144", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The song Mermaid by Train was written by Espen Lind and Amund Bjorklund and released on December 27, 2017. The song Mermaid is three minutes and sixteen seconds long. Mermaid is preceded by the song \"This'll Be My Year\" then after by John Lennon's \"Imagine\".\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_145", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: After releasing their album Squeeze, music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes, which they recorded in St Louis Missouri, USA The album was released on 2001-10-16 under the Polydor and Universal Music Group record labels and has a total run time of 230:05 minutes.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\nreleaseDate(Bootleg Series Volume 1: The Quine Tapes, 2001-10-16)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: The Bootleg Series Volume 1: The Quine Tapes was released under the Polydor Records record label and the Universal Music Group on 2001-10-16. The album has a total runtime of 230:05.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_146", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded in St. Louis, Missouri, and San Francisco, where Ed Lee is the political leader.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nleader(San Francisco, Ed Lee (politician))\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, San Francisco)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes were recorded in St. Louis, Missouri and San Francisco, where 628 is an area code.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_147", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Artist Brian Kelly, who is a composer and pianist, created and produced Expect a Miracle.\n\n### Example Output:\nartist(Expect a Miracle, Brian Kelly (composer & pianist))\nproducer(Expect a Miracle, Brian Kelly (composer & pianist))\n\n### Test Sentence: Pat Monahan is the writer of the song Mermaid by the band Train.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_148", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Nord is a post metal genre band that is owned by record label Crucial Blast. The music was released on September 6, 2006. The first E-Vinyl that was ever created was the Year of No Light.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_149", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Noise pop is a fusion genre, having elements from noise rock, among other things.\n\n### Example Output:\nmusicFusionGenre(Noise rock, Noise pop)\n\n### Test Sentence: Baroque pop is a fusion genre which includes some elements of pop rock.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_150", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Nord is an album by Year of No Light in the sludge metal genre, which originated from the hardcore punk genre.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_151", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On is by the American band The Honeymoon Killers.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\n\n### Test Sentence: The album Turn Me On is a punk blues album by the American band The Honeymoon Killers in the noise rock genre.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_152", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Bootleg Series Volume I: The Quine Tapes, a rock music genre,with runtime of 230:05 was produced and released by Velvet Underground. It was recorded in the United States.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\ngenre(Bootleg Series Volume 1: The Quine Tapes, Rock music)\n\n### Test Sentence: The Bootleg Series Volume I: The Quine Tapes was recorded in the United States.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_153", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Monarch is a band that is associated with Year of No Light.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_154", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Turn Me On album by Honeymoon Killers, who also happens to be its producer has a runtime of 35.1 minutes. It was preceded by the album Let It Breed.\n\n### Example Output:\nartist(Turn Me On (album), The Honeymoon Killers (American band))\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\nprecededBy(Turn Me On (album), Let It Breed)\nruntime(Turn Me On (album), 35.1)\n\n### Test Sentence: Phil Spector produced John Lennon’s song Imagine.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_155", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The genre of Turn Me On is punk blues.\n\n### Example Output:\ngenre(Turn Me On (album), Punk blues)\n\n### Test Sentence: The stylistic origin of the musical genre punk blues lies in earlier garage rock sound.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_156", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Nord is an album in the post metal genre by Year of No Light.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_157", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded through Polydor Records, released by the record label Universal Music Group, and preceded by the Velvet Underground album Squeeze.\n\n### Example Output:\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes was preceded by the album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_158", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The album titled Year of No Light was released on June 9, 2006 by the sludge metal and post metal band, Nord.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_159", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album 1969: The Velvet Underground Live is preceded by the Velvet Underground album Squeeze, which was followed by The Quine Tapes.\n\n### Example Output:\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nfollowedBy(Squeeze (The Velvet Underground album), 1969: The Velvet Underground Live)\n\n### Test Sentence: The rock album Bootleg Series Volume 1: The Quine Tapes by the Velvet Underground was preceded by the album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_160", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded in St. Louis, Missouri, and San Francisco, where Ed Lee is the political leader.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nleader(San Francisco, Ed Lee (politician))\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, San Francisco)\n\n### Test Sentence: San Francisco's area code is 628.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_161", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume I: The Quine Tapes was created by The Velvet Underground and is 230.05 minutes long.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes of rock genre created and produced by Velvet Underground with 230.05 minutes runtime was recorded through Polydor Records and Universal Music Group record label. It was preceded by the album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_162", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Take It Off! is preceded by the album Turn Me On.\n\n### Example Output:\nprecededBy(Take It Off!, Turn Me On (album))\n\n### Test Sentence: The Turn Me On album was followed by the Take it Off album.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_163", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Year of No Light made an album called Nord, which was released by the record label Crucial blast.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_164", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The John Lennon song Imagine is produced by Phil Spector, but The Train song Mermaid, which is followed by the song Imagine, was produced by the Espionage production team.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_165", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground, produced their album Bootleg Series Volume 1: The Quine Tapes.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\n\n### Test Sentence: Musical group the Velvet Underground released The album The Bootleg Series Volume 1: The Quine Tapes, which was recorded under the Universal Music Group and its parent company Vivendi. A former member of the band was Lou Reed.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_166", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Brian Kelly album Afterplay was preceded by Pools of Light and then Expect a Miracle.\n\n### Example Output:\nprecededBy(Expect a Miracle, Pools of Light (Brian Kelly album))\nfollowedBy(Expect a Miracle, Afterplay (Brian Kelly album))\n\n### Test Sentence: Train followed This’ll Be My Year with Mermaid, and then with Imagine, a song written by John Lennon prior to that artist’s release of Happy Xmas (War is Over).\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_167", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The album Nord was produced by Year of No Light and won the album of the year in the sludge metal genre.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_168", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: After releasing their album Squeeze, music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes, which they recorded in St Louis Missouri, USA The album was released on 2001-10-16 under the Polydor and Universal Music Group record labels and has a total run time of 230:05 minutes.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\nreleaseDate(Bootleg Series Volume 1: The Quine Tapes, 2001-10-16)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: The album Bootleg Series Volume 1: The Quine Tapes was released on 10-16-2001.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_169", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Turn Me On by Honeymoon Killers, a noise rock and punk blues genre, has a runtime of 35.1 minutes. Its producers are Honeymoon Killers themselves and Wharton Tiers.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\nproducer(Turn Me On (album), Wharton Tiers)\n\n### Test Sentence: Mermaid is a song released on the record label Columbia Records and previously under Sony Music Entertainment. Train is the band that created the 3 minutes and 16 seconds long song.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_170", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Nord is a post metal album by Year of No Light and was released by Crucial Blast record label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_171", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On (which has run time of 35.1 minutes) was preceded by the album Let It Breed; Let It Breed is preceded by the release of the album Love American Style.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nprecededBy(Turn Me On (album), Let It Breed)\nprecededBy(Let It Breed, Love American Style (album))\n\n### Test Sentence: The album Turn Me On, which has a runtime of 35.1 minutes, is preceded by the album Let It Breed.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_172", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The genre of Turn Me On is punk blues.\n\n### Example Output:\ngenre(Turn Me On (album), Punk blues)\n\n### Test Sentence: The genre of the Honeymoon Killers' album Turn Me On is punk blues.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_173", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes's genre is rock.\n\n### Example Output:\ngenre(Bootleg Series Volume 1: The Quine Tapes, Rock music)\n\n### Test Sentence: Polydor Records released the rock album, The Bootleg Series Volume I: The Quine Tapes.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_174", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground, produced their album Bootleg Series Volume 1: The Quine Tapes.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\n\n### Test Sentence: The album Bootleg Series Volume 1: The Quine Tapes by the Velvet Underground was recorded in San Francisco under the Polydor Records record label. It was preceded by the album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_175", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The Year of No Light's sludge metal album called Nord was released on Sept 6. 2006 followed by the album Live at Roadburn 2008. The Nord album was produced and released by Year of No Light under the Crucial Blast music label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_176", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: Train's hit Mermaid written by Espen Lind was put out by the Sony Music Entertainment record label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_177", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Nord, an album produced by Year of No Light, is in the sludge metal genre and was followed with the album Live at Roadburn 2008.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_178", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Noise pop is a fusion genre, having elements from noise rock, which is the genre of the album Turn Me On, among other things.\n\n### Example Output:\ngenre(Turn Me On (album), Noise rock)\nmusicFusionGenre(Noise rock, Noise pop)\n\n### Test Sentence: The genres of the album Turn Me On are punk blues and noise rock. The stylistic origins of these two genres are garage rock and noise music respectively.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_179", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: After releasing their album Squeeze, music group the Velvet Underground produced and released rock music album Bootleg Series Volume 1: The Quine Tapes, which they recorded in St Louis Missouri, USA The album was released on 2001-10-16 under the Polydor and Universal Music Group record labels and has a total run time of 230:05 minutes.\n\n### Example Output:\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, St. Louis, Missouri)\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\nreleaseDate(Bootleg Series Volume 1: The Quine Tapes, 2001-10-16)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded in St. Louis, Missouri, United States and has a runtime of 230.05 minutes. It was preceded by the Velvet Underground's Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_180", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Take It Off! is preceded by the album Turn Me On.\n\n### Example Output:\nprecededBy(Take It Off!, Turn Me On (album))\n\n### Test Sentence: The Train song Mermaid, from the California 37 album, is followed by the John Lennon song Imagine from the Imagine album.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_181", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground, produced their album Bootleg Series Volume 1: The Quine Tapes.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes is a rock album released by The Velvet Underground and was preceded by Squeeze. The album was released by Polydor Records and Universal Music Group.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_182", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Bootleg Series Volume 1: The Quine Tapes was recorded under the Universal Music Group record label.\n\n### Example Output:\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\n\n### Test Sentence: The Bootleg Series Volume I: The Quine Tapes was recorded in the United States under the Polydor Records record label. The album is owned by the label Universal Music Group, whose key person is Lucian Grainge.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_183", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn me on was created by the honeymoon killers. This song lasts 35.1 minutes and was preceded by the album Let it Breed. Wharton Tiers produced it .\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\nprecededBy(Turn Me On (album), Let It Breed)\nproducer(Turn Me On (album), Wharton Tiers)\n\n### Test Sentence: “Mermaid” is a song by Train on their “California 37” album. The song was produced by the Espionage production team and Stargate. It was written by Amund Bjorklund and is available in digital format.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_184", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Velvet Underground album Squeeze is in the genre of rock music.\n\n### Example Output:\ngenre(Squeeze (The Velvet Underground album), Rock music)\n\n### Test Sentence: Squeeze is an album produced by the Velvet Underground.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_185", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Quine Tapes are Rock music genre preceded by the album Squeeze, and Squeeze was preceded by the album Andy Warhol's Velvet Underground Featuring Nico.\n\n### Example Output:\ngenre(Bootleg Series Volume 1: The Quine Tapes, Rock music)\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nprecededBy(Squeeze (The Velvet Underground album), Andy Warhol's Velvet Underground Featuring Nico)\n\n### Test Sentence: The Quine Tapes was preceded by Squeeze by The Velvet Underground which was recorded in San Francisco and fits into the Rock music genre.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_186", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Released on September 6 of 2006 A Year of No Light's post-metal album,\" Nord,\" was followed up by \"Live at Roadburn 2008.\" Produced by the artist, The Year of No Light, the album, \"Nord\" is in the sludge metal genre.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_187", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The album Nord was produced and created by the artist Year of No Light and was released by the record label Crucial blast on 06-09-2006.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_188", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Live at Roadburn 2008 by Year of No Light was produced by the Roadburn Festival.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_189", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: Train followed Mermaid with Imagine, a song by John Lennon was produced by the production team Espionage and written by Pat Monahan.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_190", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Bootleg Series Volume I: The Quine Tapes, produced by the Velvet Underground, was recorded in the United States and has a run time of 230:05.\n\n### Example Output:\nproducer(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\nrecordedIn(Bootleg Series Volume 1: The Quine Tapes, United States)\n\n### Test Sentence: The total area of the United States is around 9.8 million square kilometers.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_191", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The genre of Turn Me On is punk blues.\n\n### Example Output:\ngenre(Turn Me On (album), Punk blues)\n\n### Test Sentence: The Turn Me On song is a punk blues song, but the Turn Me On album is of the noise rock genre, which is a fusion of genre of noise pop.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_192", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The total length of the Turn Me On punk blues album by the American band The Honeymoon Killers is 35 minutes 10 seconds.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\n\n### Test Sentence: The album Turn Me On, a punk blues and noise rock genre, is by the American band The Honeymoon Killers and has a runtime of 35 minutes 10 seconds.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_193", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded through Polydor Records, released by the record label Universal Music Group, and preceded by the Velvet Underground album Squeeze.\n\n### Example Output:\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\n\n### Test Sentence: The Bootleg Series Volume I: The Quine Tapes is being produced by The Velvet Underground after being recorded under the Universal Musical Group record label, and finally being released by the Polydor Records label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_194", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Turn Me On was produced by Wharton Tiers, followed by the Take it Off album. The producer of Take It Off! is the American band the Honeymoon Killers, coming after Take it Off! was the extended play song, 'Til Death Do Us Part.\n\n### Example Output:\nproducer(Turn Me On (album), Wharton Tiers)\nfollowedBy(Take It Off!, 'Til Death Do Us Part (EP))\nfollowedBy(Turn Me On (album), Take It Off!)\nproducer(Take It Off!, The Honeymoon Killers (American band))\n\n### Test Sentence: The song Mermaid was written by the band Train And produced by the Espionage production team. The song was followed by the release of the band’s cover of Imagine by John Lennon. The original song Imagine by John Lennon earned the FIMI certification.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_195", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded through Polydor Records, released by the record label Universal Music Group, and preceded by the Velvet Underground album Squeeze.\n\n### Example Output:\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\n\n### Test Sentence: Bootleg Series Volume 1: The Quine Tapes, released by the record label Polydor Records, was preceded by the album Squeeze.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_196", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Brain Kelly's Expect a Miracle was a compilation album that was preceded by Pools of Light and followed by Afterplay.\n\n### Example Output:\ntype(Expect a Miracle, Compilation Album)\nprecededBy(Expect a Miracle, Pools of Light (Brian Kelly album))\nfollowedBy(Expect a Miracle, Afterplay (Brian Kelly album))\n\n### Test Sentence: This'll be my year by the band Train was followed by the pop rock song Mermaid. Train followed Mermaid with the John Lennon song, Imagine, which is preceded by Power to the People and followed up by Happy Xmas (War is Over).\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_197", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume 1: The Quine Tapes was recorded through Polydor Records, released by the record label Universal Music Group, and preceded by the Velvet Underground album Squeeze.\n\n### Example Output:\nprecededBy(Bootleg Series Volume 1: The Quine Tapes, Squeeze (The Velvet Underground album))\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Polydor Records)\nrecordLabel(Bootleg Series Volume 1: The Quine Tapes, Universal Music Group)\n\n### Test Sentence: The Velvet Underground Squeeze album was succeeded by the rock album Bootleg Series Volume 1: The Quine Tapes, recorded under record label Polydor Records in San Francisco.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_198", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Take It Off! is preceded by the album Turn Me On.\n\n### Example Output:\nprecededBy(Take It Off!, Turn Me On (album))\n\n### Test Sentence: Charlie Colin is a former band mate of the band Train.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_199", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: Mermaid is a pop rock song by Train. It is three minutes and sixteen seconds long.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_200", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: The Train song Mermaid, which is an example of the reggae and pop rock genres, was produced by the Espionage production team and released on 2012-12-27. It was written by Espen Lind and was preceded by the song This'll be my year. The song has a total runtime of three minutes and sixteen seconds. The band followed this up with their cover of John Lennon’s Imagine.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_201", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: Written by the Band Train and released by Columbia Records, Mermaid is a pop rock song with a total runtime of three minutes and sixteen seconds.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_202", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The Nord album was preceded by the Demo 2004 album.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_203", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: The song Mermaid by Train (written by Espen Lind) was release on December 27, 2012. Mermaid has a total runtime of 3 minutes and 16 seconds, and belongs to the pop rock genre. Mermaid is preceded by the song This'll be my year.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_204", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: The album Nord by the artist Year of No Light, was released by the record label Crucial blast on the E-Vinyl record label.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_205", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The album Live at Roadburn 2008 was followed by “Karysun / Year of No Light”.\n\n### Example Output:\nfollowedBy(Live at Roadburn 2008 (Year of No Light album), Karysun / Year of No Light)\n\n### Test Sentence: Altar of Plagues has been associated with Year of No Light.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_206", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: Bootleg Series Volume I: The Quine Tapes was created by The Velvet Underground and is 230.05 minutes long.\n\n### Example Output:\nartist(Bootleg Series Volume 1: The Quine Tapes, The Velvet Underground)\nruntime(Bootleg Series Volume 1: The Quine Tapes, 230.05)\n\n### Test Sentence: The Velvet Underground created the album Bootleg Series Volume 1: The Quine Tapes produced by The Velvet Underground which is 230.05 minutes long.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_207", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: Punk blues is the genre of the album Turn Me On that was self-produced by the American band Honeymoon Killers. Noise rock is the genre of the album Turn Me On as well that has run time of 35.1 minutes which was preceded by the album Let It Breed.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_208", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The run time of the album Turn Me On is 35.1 minutes where the artist is the Honeymoon Killers with punk blues as the genre. Turn Me On album is self-produced by the American band Honeymoon Killers with noise rock as the genre of the album.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Noise rock)\n\n### Test Sentence: The three minute sixteen seconds Mermaid song written by the band Train is on Columbia Records.\n\n### Test Output:"}
{"id": "ont_2_musicalwork_test_209", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MusicalWork, RecordLabel, MusicType, Genre, Company, Person, Timezone, Place, Organisation, Format, Instrument, Certification, Band, Album, Language,\nOntology Relations: recordLabel(MusicalWork,RecordLabel), type(MusicalWork,MusicType), areaCode(MusicalWork,string), genre(MusicalWork,Genre), parentCompany(MusicalWork,Company), artist(MusicalWork,Person), releaseDate(MusicalWork,Date), producer(MusicalWork,Person), timeZone(MusicalWork,Timezone), location(MusicalWork,Place), runtime(MusicalWork,number), stylisticOrigin(MusicalWork,stylisticOrigin), owner(MusicalWork,Organisation), musicalArtist(MusicalWork,Person), format(MusicalWork,Format), writer(MusicalWork,writer), leader(MusicalWork,Person), distributingLabel(MusicalWork,RecordLabel), areaTotal(MusicalWork,number), musicFusionGenre(MusicalWork,Genre), followedBy(MusicalWork,MusicalWork), associatedBand/associatedMusicalArtist(MusicalWork,Person), formerBandMember(MusicalWork,Person), precededBy(MusicalWork,MusicalWork), instrument(MusicalWork,Instrument), musicSubgenre(MusicalWork,Genre), certification(MusicalWork,Certification), musicalBand(MusicalWork,Band), album(MusicalWork,Album), recordedIn(MusicalWork,Place), language(MusicalWork,Language), derivative(MusicalWork,MusicalWork), birthDate(MusicalWork,Date), keyPerson(MusicalWork,Person), utcOffset(MusicalWork,number)\n\n### Example Sentence: The Honeymoon Killers both recorded and produced the album Turn Me On. This punk blues album is 35.1 minutes long.\n\n### Example Output:\nruntime(Turn Me On (album), 35.1)\nartist(Turn Me On (album), The Honeymoon Killers (American band))\ngenre(Turn Me On (album), Punk blues)\nproducer(Turn Me On (album), The Honeymoon Killers (American band))\n\n### Test Sentence: The Honeymoon killers produced a punk blues album titled Turn Me On.\n\n### Test Output:"}
