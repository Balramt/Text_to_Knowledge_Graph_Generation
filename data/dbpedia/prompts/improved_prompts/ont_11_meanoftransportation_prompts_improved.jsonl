{"id": "ont_11_meanoftransportation_test_1", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3 has a four-stroke engine, a diesel-electric transmission and is 17068.8 millimetres in length. The ALCO RS-3 was produced between May 1950 and August 1956.\n\n### Example Output:\nbuildDate(ALCO RS-3, \"May 1950 - August 1956\")\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The German built A-Rosa Luna is powered by a MTU Friedrichshafen engine which is made in Friedrichshafen.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_2", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The A-Rosa Luna, built by Neptun Werft, Warnem√ºnde has a 1850 ton displacement and length of 125800.0 mm.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_3", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: Christened on 7th April, 2005, the A-Rosa Luna, is 125.8 metres long and has a ship displacement of 1850 tonnes.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_4", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The A-Rosa Luna is 125800.0 millimetres in length and weighs 1850 tonnes. It was completed on April 6th 2005.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_5", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The A-Rosa Luna is classed as a cruise ship. It weighs 1850 tonnes and is 125.8 metres long.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_6", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3 with a diesel-electric transmission and 17068.8 millimetres long, is made by the American Locomotive Co.\n\n### Example Output:\nbuilder(ALCO RS-3, American Locomotive Company)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: AIDA Cruises (located in Germany) is the owner of the AIDAluna which is powered by Caterpillar Inc.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_7", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: AIDA Cruises, based in Germany, operates the ship AIDAstella which was built by Meyer Werft.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_8", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3, which is 17068.8 millimetres long, has a diesel-electric transmission and a four-stroke engine.\n\n### Example Output:\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: Rostock based AIDA Cruises owns the AIDAluna which has a Caterpillar Inc engine.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_9", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3 with a diesel-electric transmission and 17068.8 millimetres long, is made by the American Locomotive Co.\n\n### Example Output:\nbuilder(ALCO RS-3, American Locomotive Company)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The AIDAstella, operated by Rostock's AIDA Cruises, is owned by Costa Crociere.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_10", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The AIDAluna is 252 metres long and its christening date was 4 April 2009. AIDAluna service was started on the 22nd of March, 2009.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_11", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The AIDAluna service began March 22, 2009. The AIDAluna is powered by Caterpillar Inc and has a length of 252000.0 millimetres.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_12", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3, which is 17068.8 millimetres long, has a diesel-electric transmission and a four-stroke engine.\n\n### Example Output:\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The AIDAluna, christened on April 4, 2004, is 252000.0 millimetres long and powered by the Caterpillar Inc. engine.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_13", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The AIDAluna, with a 252000.0 mm length, was christened 4/4/2009 and had its maiden voyage 3/22/2009.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_14", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The AIDAluna had its maiden voyage on the 22nd of March 2009. It is powered by a Caterpillar Inc. engine and is 252000.00 mm in length.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_15", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: With its premier trip on March 22, 2009, the AIDAluna is 252000.0 millimetres long and has a ship beam of 32.2 long.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_16", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: AIDA Cruises is the owner of the 252 metre long, AIDAluna, which was built by Meyer Werft.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_17", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The AIDAluna has a length of 252000.0 millimetres and a its ship beam length is 32.2. AIDAluna service was started on the 22nd of March, 2009.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_18", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: Being 252000.0 millimetres long and with a ship beam of 32.2 long, the AIDAluna was christened on April 4 2004.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_19", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3, which is 17068.8 millimetres long, has a diesel-electric transmission and a four-stroke engine.\n\n### Example Output:\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The AIDAstella, christened 3/16/2013, began service 3/17/2013 and is 253260.0 mm long.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_20", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The Aidastella is a 253.26m long Sphinx class cruise ship. She was named on 16th March 2013.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_21", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: Meyer Werft built the AIDAstella which is 253.26m long with a beam of 32.2m.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_22", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The AIDAstella which is owned by Costa Crociere has a beam of 32.2 metres and is 253260.0 millimetres in length.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_23", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3, which is 17068.8 millimetres long, has a diesel-electric transmission and a four-stroke engine.\n\n### Example Output:\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The AIDAstella was christened on 16th of March 2013, had its maiden voyage on March 17 of that same year and is 253260.0 millimetres long.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_24", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The AIDAstella is 253260.0mm long with a 32.2 length ship beam. Its maiden voyage was 3/17/2013.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_25", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: AIDAstella, which was built by Meyer Werft and is 253260.0 millimetres in length is operated by AIDA Cruises.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_26", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The ship AIDAstella is operated by AIDA Cruises and was built by Meyer Werft located in Papenburg.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_27", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Abarth 1000 GT Coupe was designed by Gruppo Bertone which was founded in Italy and is located in Turin.\n\n### Example Output:\ndesignCompany(Abarth 1000 GT Coup√©, Gruppo Bertone)\nfoundationPlace(Gruppo Bertone, Italy)\ncity(Gruppo Bertone, Turin)\n\n### Test Sentence: The AIDAstella is operated by AIDA Cruises and owned by Costa Crociere, based in Italy.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_28", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The American Locomotive Company built the ALCO RS-3 which was produced between May 1950 and August 1956. The ALCO RS-3 has a diesel-electric transmission and is 17068.8 millimetres in length.\n\n### Example Output:\nbuildDate(ALCO RS-3, \"May 1950 - August 1956\")\npowerType(ALCO RS-3, Diesel-electric transmission)\nbuilder(ALCO RS-3, American Locomotive Company)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The AIDAstella was built by Meyer Werft who are located in Germany and is operated by AIDA Cruises.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_29", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: General Dynamics is the parent company of the General Dynamics Electric Boat Co. which is located in Groton, CT. and which built the American submarine NR-1.\n\n### Example Output:\nparentCompany(General Dynamics Electric Boat, General Dynamics)\nbuilder(American submarine NR-1, General Dynamics Electric Boat)\ncity(General Dynamics Electric Boat, Groton, Connecticut)\n\n### Test Sentence: The Icebreaker Aleksey Chrikov was built at the Arctech Helsinki Shipyard in Finland where Sauli Niinisto is a leader.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_30", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco De mayo (V-2) comes from the country of Argentina which is led by Mauricio Macri and has the capital city of Buenos Aires.\n\n### Example Output:\ncapital(Argentina, Buenos Aires)\nleader(Argentina, Mauricio Macri)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The icebreaker Aleksey Chirikov was built in Helsinki, Finland, where Sauli Niinisto is a leader of the country.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_31", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The Finnish built icebreaker Aleksey Chirikov has a ship beam length of 21.2metres and was built at the Arctech Helsinki Shipyard.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_32", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The icebreaker, Aleksey Chirikov, built by Finland, has a ship beam of 21.2m, and the builder is in Helsinki.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_33", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The Aleksey Chirikov (icebreaker) is in service and was built at the Arctech Helsinki Shipyard in Finland.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_34", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The icebreaker ship Aleksey Chirikov was built in Helsinki, Finland and is in service.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_35", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket is manufactured by the Yuzhnoye Design Office and was launched on its maiden flight on 9 January 2014 from the Mid Atlantic Regional Spaceport.\n\n### Example Output:\nmaidenFlight(Antares (rocket), 2014-01-09)\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport)\n\n### Test Sentence: The icebreaker Aleksey Chirikov was built in Helsinki, Finland, where Juha Sipil√§ is a leader.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_36", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: Montreal Locomotive Works is the builder of the 12 cylinder ALCO RS-3.\n\n### Example Output:\ncylinderCount(ALCO RS-3, 12)\nbuilder(ALCO RS-3, Montreal Locomotive Works)\n\n### Test Sentence: Arctech Helsinki Shipyard (in Helsinki) built the icebreaker, Aleksey Chirikov which is in service.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_37", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3, which is 17068.8 millimetres long, has a diesel-electric transmission and a four-stroke engine.\n\n### Example Output:\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The Alhambra is owned by P&O and powered by a Humphrys, Tennant and Dykes engine which are located in Deptford.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_38", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3 with a diesel-electric transmission and 17068.8 millimetres long, is made by the American Locomotive Co.\n\n### Example Output:\nbuilder(ALCO RS-3, American Locomotive Company)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The Alhambra, powered by the London based Humphrys, Tennant and Dykes, is owned by the P & O Company.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_39", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The American Locomotive Company built the ALCO RS-3 which was produced between May 1950 and August 1956. The ALCO RS-3 has a diesel-electric transmission and is 17068.8 millimetres in length.\n\n### Example Output:\nbuildDate(ALCO RS-3, \"May 1950 - August 1956\")\npowerType(ALCO RS-3, Diesel-electric transmission)\nbuilder(ALCO RS-3, American Locomotive Company)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: Alhambra has a Humphrys, Tennant, and Dykes power type. It is owned by the London-located P&O company.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_40", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3, which is 17068.8 millimetres long, has a diesel-electric transmission and a four-stroke engine.\n\n### Example Output:\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The Samuda Brothers built the Alhambra which is powered by a Humphrys, Tennant and Dykes engine who is located is Deptford.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_41", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3 has a four-stroke engine, a diesel-electric transmission and is 17068.8 millimetres in length. The ALCO RS-3 was produced between May 1950 and August 1956.\n\n### Example Output:\nbuildDate(ALCO RS-3, \"May 1950 - August 1956\")\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The Alhambra, having a Deptford based Humphrys, Tennant and Dykes engine, was 63800.0 millimetres long.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_42", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: Aston Mastin DBS, manufacturer of the Aston Martin, is a related mode of transport as the Aston Martin V8, which was succeeded by the Aston Martin Virage.\n\n### Example Output:\nrelatedMeanOfTransportation(Aston Martin V8, Aston Martin DBS)\nsuccessor(Aston Martin V8, Aston Martin Virage)\nmanufacturer(Aston Martin DBS, Aston Martin)\n\n### Test Sentence: The Alhambra has a Humphrys, Tennant and Dykes power type who are found in London. The Alhambra was built by the Samuda Brothers.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_43", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3, produced between May 1950 and August 1956, has a length of 17068.8 millimetres and a diesel-electric transmission.\n\n### Example Output:\nbuildDate(ALCO RS-3, \"May 1950 - August 1956\")\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The Alhambra is 63.8 metres long and has a Humphrys, Tennant and Dykes (of London) power type.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_44", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The Alhambra, with a top speed of 18.52, is 63800.0 mm long and has an 8.3 m ship beam.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_45", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The Alhambra has a top speed of 18.52 and a ship beam of 8.3m. It was once wrecked.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_46", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket is a medium expendable launch system built by Orbital ATK and launched at the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Orbital ATK)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nfunction(Antares (rocket), \"Medium expendable launch system\")\n\n### Test Sentence: The Ariane 5, made by ESA and Arianespace, last flight was on Dec. 18, 2009 from the Guiana Space Centre.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_47", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: The European Space Agency manufactured the Ariane 5, which was launched from the Guiana Space Centre, and had a final flight on the 18th December 2009.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_48", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: The Ariane 5, manufactured by Airbus Defence and Space, was launched at ELA-3 with its final flight on 9/27/2003.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_49", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket is a medium expendable launch system built by Orbital ATK and launched at the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Orbital ATK)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nfunction(Antares (rocket), \"Medium expendable launch system\")\n\n### Test Sentence: The Ariane 5, was manufactured by Airbus Defence and Space and its launch site was, ELA-3 launchpad. The final flight of the Ariane 5 was on 2004-12-18.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_50", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: Ariane 5 is manufactured by the European Space Agency, the launch sitte was ELA-3 launchpad. The final flight of Ariane 5 was on the 18th December 2004.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_51", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: The Ariane 5, built by ESA and Arianespace, had its final flight on 9/27/2003 and was launched from the Guiana Space Centre.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_52", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: The Ariane 5 was manufactured at the ESA and Arianespace and the final flight was on 2004-12-18 from the Guiana Space Centre.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_53", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: The Ariane 5 was launched from the Guiana Space Centre and its final flight was on the 18th December 2009. Its manufacturer was Arianespace.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_54", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: The Ariane 5 was manufactured by Arianespace and launched from the Guiana Space Centre. The final flight of Ariane 5 was 2003-09-27.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_55", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: Arianespace is the manufacturer of Ariane 5, December 18, 2004 was Ariane 5's final flight and it was launched from the Guiana Space Centre.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_56", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, produced by Yuzhnoye Design Office, was first launched April 21, 2013 from theMid-Atlantic Regional Spaceport.\n\n### Example Output:\nmaidenFlight(Antares (rocket), 2013-04-21)\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport)\n\n### Test Sentence: Arianespace, in Courcouronnes, operates ELA-3. Ariane 5 was launched at the ELA-3 launchpad.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_57", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: Arianespace, located in France, launched the Ariane 5 at ELA-3.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_58", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Abarth 1000 GT Coupe was designed by Gruppo Bertone in Turin and made by Abarth.\n\n### Example Output:\ndesignCompany(Abarth 1000 GT Coup√©, Gruppo Bertone)\nfoundationPlace(Gruppo Bertone, Turin)\nmanufacturer(Abarth 1000 GT Coup√©, Abarth)\n\n### Test Sentence: Audi A1 is a hatchback with a 1.2 litre engine which is assembled in Brussels, Belgium.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_59", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Abarth 1000 GT Coupe was designed by Gruppo Bertone in Turin and made by Abarth.\n\n### Example Output:\ndesignCompany(Abarth 1000 GT Coup√©, Gruppo Bertone)\nfoundationPlace(Gruppo Bertone, Turin)\nmanufacturer(Abarth 1000 GT Coup√©, Abarth)\n\n### Test Sentence: The Audi A1 is assembled in Brussels, Belgium with a 1.2 litre engine and a 5-speed manual transmission.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_60", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Abarth 1000 GT Coupe was designed by Gruppo Bertone in Turin and made by Abarth.\n\n### Example Output:\ndesignCompany(Abarth 1000 GT Coup√©, Gruppo Bertone)\nfoundationPlace(Gruppo Bertone, Turin)\nmanufacturer(Abarth 1000 GT Coup√©, Abarth)\n\n### Test Sentence: Audi A1 has a 1.2 litre engine and a 5-speed manual transmission. It is assembled by Audi Brussels.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_61", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Abarth 1000 GT Coupe was designed by Gruppo Bertone in Turin and made by Abarth.\n\n### Example Output:\ndesignCompany(Abarth 1000 GT Coup√©, Gruppo Bertone)\nfoundationPlace(Gruppo Bertone, Turin)\nmanufacturer(Abarth 1000 GT Coup√©, Abarth)\n\n### Test Sentence: The Audi A1 is manufactured by Audi which has the e-tron division and has a subsidiary call the Quattro Gmbh.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_62", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Abarth 1000 GT Coupe, designed by Italy's Gruppo Bertone, was made by Abarth.\n\n### Example Output:\ndesignCompany(Abarth 1000 GT Coup√©, Gruppo Bertone)\nfoundationPlace(Gruppo Bertone, Italy)\nmanufacturer(Abarth 1000 GT Coup√©, Abarth)\n\n### Test Sentence: The Audi A1 is manufactured by Audi which was founded by August Horch. Audi e-tron is a division of Audi.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_63", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Abarth 1000 GT Coupe, designed by Italy's Gruppo Bertone, was made by Abarth.\n\n### Example Output:\ndesignCompany(Abarth 1000 GT Coup√©, Gruppo Bertone)\nfoundationPlace(Gruppo Bertone, Italy)\nmanufacturer(Abarth 1000 GT Coup√©, Abarth)\n\n### Test Sentence: Ducati is a subsidiary of Audi, who make the Audi A1. The company Audi was founded by August Horch.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_64", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: Gruppo Bertone was founded in Turin by Giovanni Bertone and was the designer of the Abarth 1000 GT Coupe.\n\n### Example Output:\ndesignCompany(Abarth 1000 GT Coup√©, Gruppo Bertone)\nfoundationPlace(Gruppo Bertone, Turin)\nfoundedBy(Gruppo Bertone, Giovanni Bertone)\n\n### Test Sentence: Audi which manufactures the Audi A1 was founded by August Horch. Lamborghini is a subsidiary of the company.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_65", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Abarth 1000 GT Coupe, designed by Italy's Gruppo Bertone, was made by Abarth.\n\n### Example Output:\ndesignCompany(Abarth 1000 GT Coup√©, Gruppo Bertone)\nfoundationPlace(Gruppo Bertone, Italy)\nmanufacturer(Abarth 1000 GT Coup√©, Abarth)\n\n### Test Sentence: The Quattro Gmbh is a subsidiary of Audi who were founded by August Horch and made the Audi A1.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_66", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Atlas II was made by Lockheed Martin in the United States and was launched at the Vandenberg AFB Space Launch Complex 3.\n\n### Example Output:\ncountryOrigin(Atlas II, United States)\nmanufacturer(Atlas II, Lockheed Martin)\nlaunchSite(Atlas II, Vandenberg AFB Space Launch Complex 3)\n\n### Test Sentence: Caterpillar, Inc. was founded in California, U.S. That company's engine powered the AIDAluna.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_67", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Atlas II, comes from the United States and was manufactured by Lockheed Martin. The Atlas II was launched from the Cape Canaveral Air Force Station.\n\n### Example Output:\nlaunchSite(Atlas II, Cape Canaveral Air Force Station)\ncountryOrigin(Atlas II, United States)\nmanufacturer(Atlas II, Lockheed Martin)\n\n### Test Sentence: Caterpillar Inc. was founded in the US and is located in Peoria, Illinois and their engine powers the AIDAluna.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_68", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: Wheel Horse is a subsidiary of American Motors who manufactured the AMC Matador and included Roy D Chapin Jr among its key personnel.\n\n### Example Output:\nsubsidiary(American Motors, Wheel Horse)\nmanufacturer(AMC Matador, American Motors)\nkeyPerson(American Motors, Roy D. Chapin, Jr.)\n\n### Test Sentence: Located in Illinois with a key person called Douglas R. Oberhelman is the Caterpillar Co. AIDAluna is powered by Caterpillar Inc.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_69", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: Wheel Horse is a subsidiary of American Motors who manufactured the AMC Matador and included Roy D Chapin Jr among its key personnel.\n\n### Example Output:\nsubsidiary(American Motors, Wheel Horse)\nmanufacturer(AMC Matador, American Motors)\nkeyPerson(American Motors, Roy D. Chapin, Jr.)\n\n### Test Sentence: Caterpillar Inc. of Peoria, Illinois includes key figure Douglas R Oberhelman and powers AIDAluna.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_70", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: AIDAluna is powered by Caterpillar Inc, who are from Peoria, Illinois. AIDA Cruises is the owner of the AIDAluna.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_71", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Atlas II, comes from the United States and was manufactured by Lockheed Martin. The Atlas II was launched from the Cape Canaveral Air Force Station.\n\n### Example Output:\nlaunchSite(Atlas II, Cape Canaveral Air Force Station)\ncountryOrigin(Atlas II, United States)\nmanufacturer(Atlas II, Lockheed Martin)\n\n### Test Sentence: AIDA Cruises is the owner of the AIDAluna which is powered by Caterpillar Inc. found in the US.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_72", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: Ariane 5 was manufactured by the European Space Agency and launched from the ELA-3 launchpad at the Guiana Space Centre.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_73", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: The Ariane 5 was launched at the Arianespace operated ELA-3 which is at the Guiana Space Centre.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_74", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket is manufactured by the Yuzhnoye Design Office and was launched on its maiden flight on 9 January 2014 from the Mid Atlantic Regional Spaceport.\n\n### Example Output:\nmaidenFlight(Antares (rocket), 2014-01-09)\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport)\n\n### Test Sentence: The icebreaker Aleksey Chirikov was built at the Arctech Helsinki Shipyard in Finland where the leader is Juha Sipila.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_75", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Atlas II comes from the US where Native Americans are an ethnic group and the leader is the President.\n\n### Example Output:\ncountryOrigin(Atlas II, United States)\nethnicGroup(United States, Native Americans in the United States)\nleaderTitle(United States, President of the United States)\n\n### Test Sentence: Finland is the builder if the icebreaker called the Aleksey Chirikov. Both Sauli Niinisto and Juha Sipila are leaders in Finland.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_76", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3 has a four-stroke engine, a diesel-electric transmission and is 17068.8 millimetres in length. The ALCO RS-3 was produced between May 1950 and August 1956.\n\n### Example Output:\nbuildDate(ALCO RS-3, \"May 1950 - August 1956\")\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: MTU Friedrichshafen is in Friedrichshafen and made the engines that power the A-Rosa Luna built on the Neptun Werft.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_77", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3, which is 17068.8 millimetres long, has a diesel-electric transmission and a four-stroke engine.\n\n### Example Output:\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The A-Rosa Luna was built in Rostock and is powered by a MTU Friedrichshafen engine. MTU Friedrichshafen is in the city of Friedrichshafen.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_78", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: Montreal Locomotive Works is the builder of the 12 cylinder ALCO RS-3.\n\n### Example Output:\ncylinderCount(ALCO RS-3, 12)\nbuilder(ALCO RS-3, Montreal Locomotive Works)\n\n### Test Sentence: MTU Friedrichshafen of Friedrichshafen, owned by Rolls-Royce Holdings, manufactures the A-Rosa Luna engine.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_79", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: Montreal Locomotive Works is the builder of the 12 cylinder ALCO RS-3.\n\n### Example Output:\ncylinderCount(ALCO RS-3, 12)\nbuilder(ALCO RS-3, Montreal Locomotive Works)\n\n### Test Sentence: Belonging to the Rolls-Royce Power Systems parent company, MTU located in Friedrichshafen produces the engines for the A-Rosa Luna.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_80", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: Montreal Locomotive Works is the builder of the 12 cylinder ALCO RS-3.\n\n### Example Output:\ncylinderCount(ALCO RS-3, 12)\nbuilder(ALCO RS-3, Montreal Locomotive Works)\n\n### Test Sentence: The A-Rosa Luna is powered by an MTU Friedrichshafen engine. Rolls-Royce Power Systems is the parent company of MTU Friedrichshafen, and Rolls-Royce Holdings is its owner.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_81", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3, which is 17068.8 millimetres long, has a diesel-electric transmission and a four-stroke engine.\n\n### Example Output:\nengine(ALCO RS-3, Four-stroke engine)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The A Rosa Luna is powered by a MTU Friedrichshafen engine. It was built by Neptun Werft in Rostock.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_82", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The American Locomotive Company built the ALCO RS-3, the total production amount is 1418 and the length is 17068.8 millimetres.\n\n### Example Output:\nbuilder(ALCO RS-3, American Locomotive Company)\ntotalProduction(ALCO RS-3, 1418)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The A-Rosa Luna was built on the Neptun Werft in Rostock, Germany.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_83", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco de Mayo (V-2) is 192000.0 millimetres long and has a ship beam length of 24.4. It derives from Argentina.\n\n### Example Output:\nlength(ARA Veinticinco de Mayo (V-2), 192000.0 (millimetres))\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: Ordered on January 22nd, 2004, the A-Rosa Luna, is classed as a Cruise ship and has a length of 125.8 metres.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_84", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ALCO RS-3 with a diesel-electric transmission and 17068.8 millimetres long, is made by the American Locomotive Co.\n\n### Example Output:\nbuilder(ALCO RS-3, American Locomotive Company)\npowerType(ALCO RS-3, Diesel-electric transmission)\nlength(ALCO RS-3, 17068.8 (millimetres))\n\n### Test Sentence: The operator of AIDAstella is German-based AIDA Cruises. The AIDAstella is owned by Costa Crociere.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_85", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket is manufactured by the Yuzhnoye Design Office and was launched on its maiden flight on 9 January 2014 from the Mid Atlantic Regional Spaceport.\n\n### Example Output:\nmaidenFlight(Antares (rocket), 2014-01-09)\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport)\n\n### Test Sentence: Finland is home to the Finns and the icebreaker Aleksey Chirikov, built at the Arctech Helsinki Shipyard.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_86", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The ARA Veinticinco De mayo (V-2), from Argentina, has a ship beam of 24.4 and gave spare parts for the NaeL Minas Geraisand. The Veinticinco was thrown away in 2000.\n\n### Example Output:\nshipBeam(ARA Veinticinco de Mayo (V-2), 24.4)\nstatus(ARA Veinticinco de Mayo (V-2), \"Provided spare parts for NAeL Minas Geraisand and remainder was scrapped in 2000\")\ncountry(ARA Veinticinco de Mayo (V-2), Argentina)\n\n### Test Sentence: The Alhambra, which was wrecked, had an 8.3 m ship beam and was 63800.0 mms in length.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_87", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Abarth 1000 GT has a Coup√© body style with a straight-four engine and a wheelbase of 2160 millimetres.\n\n### Example Output:\nwheelbase(Abarth 1000 GT Coup√©, 2160.0 (millimetres))\nbodyStyle(Abarth 1000 GT Coup√©, Coup√©)\nengine(Abarth 1000 GT Coup√©, Straight-four engine)\n\n### Test Sentence: The Audi A1 is a hatchback assembled by Audi Brussels and has a 1.2 litre engine.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_88", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: Italian assembled, the Alfa Romeo 164 is related to other cars such as the Saab 9000 and Fiat Croma, all of which are similar means of transport.\n\n### Example Output:\nrelatedMeanOfTransportation(Alfa Romeo 164, Fiat Croma)\nassembly(Alfa Romeo 164, Italy)\nrelatedMeanOfTransportation(Alfa Romeo 164, Saab 9000)\n\n### Test Sentence: The Audi A1 is manufactured by Audi. It is a similar means of transport as the Seat Ibiza and Volkswagen Polo since they are all cars.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_89", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Atlas II was made by Lockheed Martin in the United States and was launched at the Vandenberg AFB Space Launch Complex 3.\n\n### Example Output:\ncountryOrigin(Atlas II, United States)\nmanufacturer(Atlas II, Lockheed Martin)\nlaunchSite(Atlas II, Vandenberg AFB Space Launch Complex 3)\n\n### Test Sentence: AIDAluna is powered by Caterpillar Inc. which was founded in California and is located in Peoria, Illinois.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_90", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Atlas II, comes from the United States and was manufactured by Lockheed Martin. The Atlas II was launched from the Cape Canaveral Air Force Station.\n\n### Example Output:\nlaunchSite(Atlas II, Cape Canaveral Air Force Station)\ncountryOrigin(Atlas II, United States)\nmanufacturer(Atlas II, Lockheed Martin)\n\n### Test Sentence: AIDAluna is powered by U.S. based Caterpillar Inc. Douglas R Oberhelman is a key person at Caterpillar Inc.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_91", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: The Ariane 5 was launched at ELA-3 which is located at the Guiana Space Centre whose headquarters are at Kourou in French Guiana.\n\n### Test Output:"}
{"id": "ont_11_meanoftransportation_test_92", "prompt": "### INSTRUCTION:\nYour task is to analyze the input text and extract high-quality subject-predicate-object (SPO) triples suitable for constructing a knowledge graph.\n\n- Use the provided  Ontology Concepts and Ontology Relations as your primary reference.\n- You may include new concepts or relations only if they are clearly and unambiguously implied by the sentence.\n- Ensure all extracted relations are domain-relevant and meaningful.\n- Avoid inferring or hallucinating facts not stated in the text.\n- Output only the SPO triples in the format: predicate(subject, object), one per line.\n- Do NOT include extra commentary, headers, bullet points, or JSON.\n- Be concise, clean, and precise in your extraction.\n\n### CONTEXT:\nOntology Concepts: MeanOfTransportation, Place, Country, City, Function, Ship, ShipClass, Product, Demonym, Airport, Flight, Organisation, Anthem, PowerType, EthnicGroup, Division, Saint, Language, BodyStyle, Wheelbase,\nOntology Relations: launchSite(MeanOfTransportation,Place), topSpeed(MeanOfTransportation,number), buildDate(MeanOfTransportation,Date), totalProduction(MeanOfTransportation,number), completionDate(MeanOfTransportation,Date), capital(Country,City), parentCompany(,Company), activeYearsStartDate(MeanOfTransportation,Date), shipDraft(MeanOfTransportation,Ship), function(MeanOfTransportation,Function), shipClass(MeanOfTransportation,ShipClass), product(,Product), alternativeName(MeanOfTransportation,string), demonym(MeanOfTransportation,Demonym), headquarter(MeanOfTransportation,headquarter), countryOrigin(MeanOfTransportation,Country), assembly(MeanOfTransportation,Place), maidenFlight(Airport,Flight), location(MeanOfTransportation,Place), transmission(MeanOfTransportation,transmission), length(MeanOfTransportation,number), shipDisplacement(MeanOfTransportation,shipDisplacement), site(MeanOfTransportation,Place), finalFlight(MeanOfTransportation,Flight), owner(MeanOfTransportation,Organisation), fate(MeanOfTransportation,Fate), anthem(MeanOfTransportation,Anthem), powerType(MeanOfTransportation,PowerType), diameter(MeanOfTransportation,number), subsidiary(MeanOfTransportation,subsidiary), leaderTitle(Country,string), christeningDate(MeanOfTransportation,Date), ethnicGroup(Country,EthnicGroup), relatedMeanOfTransportation(MeanOfTransportation,MeanOfTransportation), city(MeanOfTransportation,City), status(MeanOfTransportation,string), leader(Country,Person), shipBeam(MeanOfTransportation,shipBeam), areaTotal(MeanOfTransportation,number), isPartOf(City,Country), extinctionDate(MeanOfTransportation,Date), engine(MeanOfTransportation,string), productionStartYear(MeanOfTransportation,Year), manufacturer(MeanOfTransportation,Company), successor(,Person), failedLaunches(MeanOfTransportation,number), builder(MeanOfTransportation,Company), foundationPlace(,Place), modelYears(MeanOfTransportation,number), totalLaunches(MeanOfTransportation,number), country(MeanOfTransportation,Country), shipLaunch(MeanOfTransportation,Ship), division(MeanOfTransportation,Division), designCompany(MeanOfTransportation,Company), saint(Country,Saint), language(Country,Language), productionEndYear(MeanOfTransportation,Year), comparable(MeanOfTransportation,MeanOfTransportation), cylinderCount(MeanOfTransportation,number), shipOrdered(MeanOfTransportation,number), keyPerson(,Person), foundedBy(,Person), operator(MeanOfTransportation,Company), class(MeanOfTransportation,Class), rocketStages(MeanOfTransportation,number), maidenVoyage(MeanOfTransportation,Date), bodyStyle(MeanOfTransportation,BodyStyle), wheelbase(MeanOfTransportation,Wheelbase)\n\n### Example Sentence: The Antares rocket, is manufactured by the Yuzhnoye Design Office, its maiden flight was on April 21st, 2013, launched from the Mid-Atlantic Regional Spaceport Launch Pad 0.\n\n### Example Output:\nmanufacturer(Antares (rocket), Yuzhnoye Design Office)\nlaunchSite(Antares (rocket), Mid-Atlantic Regional Spaceport Launch Pad 0)\nmaidenFlight(Antares (rocket), 2013-04-21)\n\n### Test Sentence: Located in French Guiana, the Guiana Space Centre is the site of the ELA-3 which was where the Ariane 5 was launched.\n\n### Test Output:"}
